1. Write a MongoDB query to display all the documents in the collection restaurants
iacsd0923> db.restuarant.find()
[
  {
    _id: ObjectId("6521555101dd272e26a91074"),
    address: {
      building: '2780',
      coord: [ -73.98241999999999, 40.579505 ],
      street: 'Stillwell Avenue',
      zipcode: '11224'
    },
    borough: 'Brooklyn',
    cuisine: 'American',
    grades: [
      {
        date: ISODate("2014-06-10T00:00:00.000Z"),
        grade: 'A',
        score: 5
      },
      {
        date: ISODate("2013-06-05T00:00:00.000Z"),
        grade: 'A',
        score: 7
      },
      {
        date: ISODate("2012-04-13T00:00:00.000Z"),
        grade: 'A',
        score: 12
      },
      {
        date: ISODate("2011-10-12T00:00:00.000Z"),
        grade: 'A',
        score: 12
      }
    ],
    name: 'Riviera Caterer',
    restaurant_id: '40356018'
  },
  {
    _id: ObjectId("6521555101dd272e26a91075"),
    address: {
      building: '469',
      coord: [ -73.961704, 40.662942 ],
      street: 'Flatbush Avenue',
      zipcode: '11225'
    },
    borough: 'Brooklyn',
    cuisine: 'Hamburgers',
    grades: [
      {
        date: ISODate("2014-12-30T00:00:00.000Z"),
        grade: 'A',
        score: 8
      },
      {
        date: ISODate("2014-07-01T00:00:00.000Z"),
        grade: 'B',
        score: 23
      },
      {
        date: ISODate("2013-04-30T00:00:00.000Z"),
        grade: 'A',
        score: 12
      },
      {
        date: ISODate("2012-05-08T00:00:00.000Z"),
        grade: 'A',
        score: 12
      }
    ],
    name: "Wendy'S",
    restaurant_id: '30112340'
  },
  {
    _id: ObjectId("6521555101dd272e26a91076"),
    address: {
      building: '351',
      coord: [ -73.98513559999999, 40.7676919 ],
      street: 'West   57 Street',
      zipcode: '10019'
    },
    borough: 'Manhattan',
    cuisine: 'Irish',
    grades: [
      {
        date: ISODate("2014-09-06T00:00:00.000Z"),
        grade: 'A',
        score: 2
      },
      {
        date: ISODate("2013-07-22T00:00:00.000Z"),
        grade: 'A',
        score: 11
      },
      {
        date: ISODate("2012-07-31T00:00:00.000Z"),
        grade: 'A',
        score: 12
      },
      {
        date: ISODate("2011-12-29T00:00:00.000Z"),
        grade: 'A',
        score: 12
      }
    ],
    name: 'Dj Reynolds Pub And Restaurant',
    restaurant_id: '30191841'
  },
  {
    _id: ObjectId("6521555101dd272e26a91077"),
    address: {
      building: '1007',
      coord: [ -73.856077, 40.848447 ],
      street: 'Morris Park Ave',
      zipcode: '10462'
    },
    borough: 'Bronx',
    cuisine: 'Bakery',
    grades: [
      {
        date: ISODate("2014-03-03T00:00:00.000Z"),
        grade: 'A',
        score: 2
      },
      {
        date: ISODate("2013-09-11T00:00:00.000Z"),
        grade: 'A',
        score: 6
      },
      {
        date: ISODate("2013-01-24T00:00:00.000Z"),
        grade: 'A',
        score: 10
      },
      {
        date: ISODate("2011-11-23T00:00:00.000Z"),
        grade: 'A',
        score: 9
      },
      {
        date: ISODate("2011-03-10T00:00:00.000Z"),
        grade: 'B',
        score: 14
      }
    ],
    name: 'Morris Park Bake Shop',
    restaurant_id: '30075445'
  },
  {
    _id: ObjectId("6521555101dd272e26a91078"),
    address: {
      building: '8825',
      coord: [ -73.8803827, 40.7643124 ],
      street: 'Astoria Boulevard',
      zipcode: '11369'
    },
    borough: 'Queens',
    cuisine: 'American',
    grades: [
      {
        date: ISODate("2014-11-15T00:00:00.000Z"),
        grade: 'Z',
        score: 38
      },
      {
        date: ISODate("2014-05-02T00:00:00.000Z"),
        grade: 'A',
        score: 10
      },
      {
        date: ISODate("2013-03-02T00:00:00.000Z"),
        grade: 'A',
        score: 7
      },
      {
        date: ISODate("2012-02-10T00:00:00.000Z"),
        grade: 'A',
        score: 13
      }
    ],
    name: 'Brunos On The Boulevard',
    restaurant_id: '40356151'
  },
  {
    _id: ObjectId("6521555101dd272e26a91079"),
    address: {
      building: '2206',
      coord: [ -74.1377286, 40.6119572 ],
      street: 'Victory Boulevard',
      zipcode: '10314'
    },
    borough: 'Staten Island',
    cuisine: 'Jewish/Kosher',
    grades: [
      {
        date: ISODate("2014-10-06T00:00:00.000Z"),
        grade: 'A',
        score: 9
      },
      {
        date: ISODate("2014-05-20T00:00:00.000Z"),
        grade: 'A',
        score: 12
      },
      {
        date: ISODate("2013-04-04T00:00:00.000Z"),
        grade: 'A',
        score: 12
      },
      {
        date: ISODate("2012-01-24T00:00:00.000Z"),
        grade: 'A',
        score: 9
      }
    ],
    name: 'Kosher Island',
    restaurant_id: '40356442'
  },
  {
    _id: ObjectId("6521555101dd272e26a9107a"),
    address: {
      building: '97-22',
      coord: [ -73.8601152, 40.7311739 ],
      street: '63 Road',
      zipcode: '11374'
    },
    borough: 'Queens',
    cuisine: 'Jewish/Kosher',
    grades: [
      {
        date: ISODate("2014-11-24T00:00:00.000Z"),
        grade: 'Z',
        score: 20
      },
      {
        date: ISODate("2013-01-17T00:00:00.000Z"),
        grade: 'A',
        score: 13
      },
      {
        date: ISODate("2012-08-02T00:00:00.000Z"),
        grade: 'A',
        score: 13
      },
      {
        date: ISODate("2011-12-15T00:00:00.000Z"),
        grade: 'B',
        score: 25
      }
    ],
    name: 'Tov Kosher Kitchen',
    restaurant_id: '40356068'
  },
  {
    _id: ObjectId("6521555101dd272e26a9107b"),
    address: {
      building: '7114',
      coord: [ -73.9068506, 40.6199034 ],
      street: 'Avenue U',
      zipcode: '11234'
    },
    borough: 'Brooklyn',
    cuisine: 'Delicatessen',
    grades: [
      {
        date: ISODate("2014-05-29T00:00:00.000Z"),
        grade: 'A',
        score: 10
      },
      {
        date: ISODate("2014-01-14T00:00:00.000Z"),
        grade: 'A',
        score: 10
      },
      {
        date: ISODate("2013-08-03T00:00:00.000Z"),
        grade: 'A',
        score: 8
      },
      {
        date: ISODate("2012-07-18T00:00:00.000Z"),
        grade: 'A',
        score: 10
      },
      {
        date: ISODate("2012-03-09T00:00:00.000Z"),
        grade: 'A',
        score: 13
      },
      {
        date: ISODate("2011-10-14T00:00:00.000Z"),
        grade: 'A',
        score: 9
      }
    ],
    name: "Wilken'S Fine Food",
    restaurant_id: '40356483'
  },
  {
    _id: ObjectId("6521555101dd272e26a9107c"),
    address: {
      building: '6409',
      coord: [ -74.00528899999999, 40.628886 ],
      street: '11 Avenue',
      zipcode: '11219'
    },
    borough: 'Brooklyn',
    cuisine: 'American',
    grades: [
      {
        date: ISODate("2014-07-18T00:00:00.000Z"),
        grade: 'A',
        score: 12
      },
      {
        date: ISODate("2013-07-30T00:00:00.000Z"),
        grade: 'A',
        score: 12
      },
      {
        date: ISODate("2013-02-13T00:00:00.000Z"),
        grade: 'A',
        score: 11
      },
      {
        date: ISODate("2012-08-16T00:00:00.000Z"),
        grade: 'A',
        score: 2
      },
      {
        date: ISODate("2011-08-17T00:00:00.000Z"),
        grade: 'A',
        score: 11
      }
    ],
    name: 'Regina Caterers',
    restaurant_id: '40356649'
  },
  {
    _id: ObjectId("6521555101dd272e26a9107d"),
    address: {
      building: '1839',
      coord: [ -73.9482609, 40.6408271 ],
      street: 'Nostrand Avenue',
      zipcode: '11226'
    },
    borough: 'Brooklyn',
    cuisine: 'Ice Cream, Gelato, Yogurt, Ices',
    grades: [
      {
        date: ISODate("2014-07-14T00:00:00.000Z"),
        grade: 'A',
        score: 12
      },
      {
        date: ISODate("2013-07-10T00:00:00.000Z"),
        grade: 'A',
        score: 8
      },
      {
        date: ISODate("2012-07-11T00:00:00.000Z"),
        grade: 'A',
        score: 5
      },
      {
        date: ISODate("2012-02-23T00:00:00.000Z"),
        grade: 'A',
        score: 8
      }
    ],
    name: 'Taste The Tropics Ice Cream',
    restaurant_id: '40356731'
  },
  {
    _id: ObjectId("6521555101dd272e26a9107e"),
    address: {
      building: '2300',
      coord: [ -73.8786113, 40.8502883 ],
      street: 'Southern Boulevard',
      zipcode: '10460'
    },
    borough: 'Bronx',
    cuisine: 'American',
    grades: [
      {
        date: ISODate("2014-05-28T00:00:00.000Z"),
        grade: 'A',
        score: 11
      },
      {
        date: ISODate("2013-06-19T00:00:00.000Z"),
        grade: 'A',
        score: 4
      },
      {
        date: ISODate("2012-06-15T00:00:00.000Z"),
        grade: 'A',
        score: 3
      }
    ],
    name: 'Wild Asia',
    restaurant_id: '40357217'
  },
  {
    _id: ObjectId("6521555101dd272e26a9107f"),
    address: {
      building: '1269',
      coord: [ -73.871194, 40.6730975 ],
      street: 'Sutter Avenue',
      zipcode: '11208'
    },
    borough: 'Brooklyn',
    cuisine: 'Chinese',
    grades: [
      {
        date: ISODate("2014-09-16T00:00:00.000Z"),
        grade: 'B',
        score: 21
      },
      {
        date: ISODate("2013-08-28T00:00:00.000Z"),
        grade: 'A',
        score: 7
      },
      {
        date: ISODate("2013-04-02T00:00:00.000Z"),
        grade: 'C',
        score: 56
      },
      {
        date: ISODate("2012-08-15T00:00:00.000Z"),
        grade: 'B',
        score: 27
      },
      {
        date: ISODate("2012-03-28T00:00:00.000Z"),
        grade: 'B',
        score: 27
      }
    ],
    name: 'May May Kitchen',
    restaurant_id: '40358429'
  },
  {
    _id: ObjectId("6521555101dd272e26a91080"),
    address: {
      building: '7715',
      coord: [ -73.9973325, 40.61174889999999 ],
      street: '18 Avenue',
      zipcode: '11214'
    },
    borough: 'Brooklyn',
    cuisine: 'American',
    grades: [
      {
        date: ISODate("2014-04-16T00:00:00.000Z"),
        grade: 'A',
        score: 5
      },
      {
        date: ISODate("2013-04-23T00:00:00.000Z"),
        grade: 'A',
        score: 2
      },
      {
        date: ISODate("2012-04-24T00:00:00.000Z"),
        grade: 'A',
        score: 5
      },
      {
        date: ISODate("2011-12-16T00:00:00.000Z"),
        grade: 'A',
        score: 2
      }
    ],
    name: 'C & C Catering Service',
    restaurant_id: '40357437'
  },
  {
    _id: ObjectId("6521555101dd272e26a91081"),
    address: {
      building: '265-15',
      coord: [ -73.7032601, 40.7386417 ],
      street: 'Hillside Avenue',
      zipcode: '11004'
    },
    borough: 'Queens',
    cuisine: 'Ice Cream, Gelato, Yogurt, Ices',
    grades: [
      {
        date: ISODate("2014-10-28T00:00:00.000Z"),
        grade: 'A',
        score: 9
      },
      {
        date: ISODate("2013-09-18T00:00:00.000Z"),
        grade: 'A',
        score: 10
      },
      {
        date: ISODate("2012-09-20T00:00:00.000Z"),
        grade: 'A',
        score: 13
      }
    ],
    name: 'Carvel Ice Cream',
    restaurant_id: '40361322'
  },
  {
    _id: ObjectId("6521555101dd272e26a91082"),
    address: {
      building: '705',
      coord: [ -73.9653967, 40.6064339 ],
      street: 'Kings Highway',
      zipcode: '11223'
    },
    borough: 'Brooklyn',
    cuisine: 'Jewish/Kosher',
    grades: [
      {
        date: ISODate("2014-11-10T00:00:00.000Z"),
        grade: 'A',
        score: 11
      },
      {
        date: ISODate("2013-10-10T00:00:00.000Z"),
        grade: 'A',
        score: 13
      },
      {
        date: ISODate("2012-10-04T00:00:00.000Z"),
        grade: 'A',
        score: 7
      },
      {
        date: ISODate("2012-05-21T00:00:00.000Z"),
        grade: 'A',
        score: 9
      },
      {
        date: ISODate("2011-12-30T00:00:00.000Z"),
        grade: 'B',
        score: 19
      }
    ],
    name: 'Seuda Foods',
    restaurant_id: '40360045'
  },
  {
    _id: ObjectId("6521555101dd272e26a91083"),
    address: {
      building: '203',
      coord: [ -73.97822040000001, 40.6435254 ],
      street: 'Church Avenue',
      zipcode: '11218'
    },
    borough: 'Brooklyn',
    cuisine: 'Ice Cream, Gelato, Yogurt, Ices',
    grades: [
      {
        date: ISODate("2014-02-10T00:00:00.000Z"),
        grade: 'A',
        score: 2
      },
      {
        date: ISODate("2013-01-02T00:00:00.000Z"),
        grade: 'A',
        score: 13
      },
      {
        date: ISODate("2012-01-09T00:00:00.000Z"),
        grade: 'A',
        score: 3
      },
      {
        date: ISODate("2011-11-07T00:00:00.000Z"),
        grade: 'P',
        score: 12
      },
      {
        date: ISODate("2011-07-21T00:00:00.000Z"),
        grade: 'A',
        score: 13
      }
    ],
    name: 'Carvel Ice Cream',
    restaurant_id: '40360076'
  },
  {
    _id: ObjectId("6521555101dd272e26a91084"),
    address: {
      building: '6909',
      coord: [ -74.0259567, 40.6353674 ],
      street: '3 Avenue',
      zipcode: '11209'
    },
    borough: 'Brooklyn',
    cuisine: 'Delicatessen',
    grades: [
      {
        date: ISODate("2014-08-21T00:00:00.000Z"),
        grade: 'A',
        score: 4
      },
      {
        date: ISODate("2014-03-05T00:00:00.000Z"),
        grade: 'A',
        score: 3
      },
      {
        date: ISODate("2013-01-10T00:00:00.000Z"),
        grade: 'A',
        score: 10
      }
    ],
    name: 'Nordic Delicacies',
    restaurant_id: '40361390'
  },
  {
    _id: ObjectId("6521555101dd272e26a91085"),
    address: {
      building: '1',
      coord: [ -73.96926909999999, 40.7685235 ],
      street: 'East   66 Street',
      zipcode: '10065'
    },
    borough: 'Manhattan',
    cuisine: 'American',
    grades: [
      {
        date: ISODate("2014-05-07T00:00:00.000Z"),
        grade: 'A',
        score: 3
      },
      {
        date: ISODate("2013-05-03T00:00:00.000Z"),
        grade: 'A',
        score: 4
      },
      {
        date: ISODate("2012-04-30T00:00:00.000Z"),
        grade: 'A',
        score: 6
      },
      {
        date: ISODate("2011-12-27T00:00:00.000Z"),
        grade: 'A',
        score: 0
      }
    ],
    name: '1 East 66Th Street Kitchen',
    restaurant_id: '40359480'
  },
  {
    _id: ObjectId("6521555101dd272e26a91086"),
    address: {
      building: '522',
      coord: [ -73.95171, 40.767461 ],
      street: 'East   74 Street',
      zipcode: '10021'
    },
    borough: 'Manhattan',
    cuisine: 'American',
    grades: [
      {
        date: ISODate("2014-09-02T00:00:00.000Z"),
        grade: 'A',
        score: 12
      },
      {
        date: ISODate("2013-12-19T00:00:00.000Z"),
        grade: 'B',
        score: 16
      },
      {
        date: ISODate("2013-05-28T00:00:00.000Z"),
        grade: 'A',
        score: 9
      },
      {
        date: ISODate("2012-12-07T00:00:00.000Z"),
        grade: 'A',
        score: 13
      },
      {
        date: ISODate("2012-03-29T00:00:00.000Z"),
        grade: 'A',
        score: 11
      }
    ],
    name: 'Glorious Food',
    restaurant_id: '40361521'
  },
  {
    _id: ObjectId("6521555101dd272e26a91087"),
    address: {
      building: '284',
      coord: [ -73.9829239, 40.6580753 ],
      street: 'Prospect Park West',
      zipcode: '11215'
    },
    borough: 'Brooklyn',
    cuisine: 'American',
    grades: [
      {
        date: ISODate("2014-11-19T00:00:00.000Z"),
        grade: 'A',
        score: 11
      },
      {
        date: ISODate("2013-11-14T00:00:00.000Z"),
        grade: 'A',
        score: 2
      },
      {
        date: ISODate("2012-12-05T00:00:00.000Z"),
        grade: 'A',
        score: 13
      },
      {
        date: ISODate("2012-05-17T00:00:00.000Z"),
        grade: 'A',
        score: 11
      }
    ],
    name: 'The Movable Feast',
    restaurant_id: '40361606'
  }
]
2. Write a MongoDB query to display the fields restaurant_id, name, borough and cuisine for
all the documents in the collection restaurant.
iacsd0923> db.restuarant.find({},{restaurant_id:1,name:1,borough:1,cuisine:1})
[
  {
    _id: ObjectId("6521555101dd272e26a91074"),
    borough: 'Brooklyn',
    cuisine: 'American',
    name: 'Riviera Caterer',
    restaurant_id: '40356018'
  },
  {
    _id: ObjectId("6521555101dd272e26a91075"),
    borough: 'Brooklyn',
    cuisine: 'Hamburgers',
    name: "Wendy'S",
    restaurant_id: '30112340'
  },
  {
    _id: ObjectId("6521555101dd272e26a91076"),
    borough: 'Manhattan',
    cuisine: 'Irish',
    name: 'Dj Reynolds Pub And Restaurant',
    restaurant_id: '30191841'
  },
  {
    _id: ObjectId("6521555101dd272e26a91077"),
    borough: 'Bronx',
    cuisine: 'Bakery',
    name: 'Morris Park Bake Shop',
    restaurant_id: '30075445'
  },
  {
    _id: ObjectId("6521555101dd272e26a91078"),
    borough: 'Queens',
    cuisine: 'American',
    name: 'Brunos On The Boulevard',
    restaurant_id: '40356151'
  },
  {
    _id: ObjectId("6521555101dd272e26a91079"),
    borough: 'Staten Island',
    cuisine: 'Jewish/Kosher',
    name: 'Kosher Island',
    restaurant_id: '40356442'
  },
  {
    _id: ObjectId("6521555101dd272e26a9107a"),
    borough: 'Queens',
    cuisine: 'Jewish/Kosher',
    name: 'Tov Kosher Kitchen',
    restaurant_id: '40356068'
  },
  {
    _id: ObjectId("6521555101dd272e26a9107b"),
    borough: 'Brooklyn',
    cuisine: 'Delicatessen',
    name: "Wilken'S Fine Food",
    restaurant_id: '40356483'
  },
  {
    _id: ObjectId("6521555101dd272e26a9107c"),
    borough: 'Brooklyn',
    cuisine: 'American',
    name: 'Regina Caterers',
    restaurant_id: '40356649'
  },
  {
    _id: ObjectId("6521555101dd272e26a9107d"),
    borough: 'Brooklyn',
    cuisine: 'Ice Cream, Gelato, Yogurt, Ices',
    name: 'Taste The Tropics Ice Cream',
    restaurant_id: '40356731'
  },
  {
    _id: ObjectId("6521555101dd272e26a9107e"),
    borough: 'Bronx',
    cuisine: 'American',
    name: 'Wild Asia',
    restaurant_id: '40357217'
  },
  {
    _id: ObjectId("6521555101dd272e26a9107f"),
    borough: 'Brooklyn',
    cuisine: 'Chinese',
    name: 'May May Kitchen',
    restaurant_id: '40358429'
  },
  {
    _id: ObjectId("6521555101dd272e26a91080"),
    borough: 'Brooklyn',
    cuisine: 'American',
    name: 'C & C Catering Service',
    restaurant_id: '40357437'
  },
  {
    _id: ObjectId("6521555101dd272e26a91081"),
    borough: 'Queens',
    cuisine: 'Ice Cream, Gelato, Yogurt, Ices',
    name: 'Carvel Ice Cream',
    restaurant_id: '40361322'
  },
  {
    _id: ObjectId("6521555101dd272e26a91082"),
    borough: 'Brooklyn',
    cuisine: 'Jewish/Kosher',
    name: 'Seuda Foods',
    restaurant_id: '40360045'
  },
  {
    _id: ObjectId("6521555101dd272e26a91083"),
    borough: 'Brooklyn',
    cuisine: 'Ice Cream, Gelato, Yogurt, Ices',
    name: 'Carvel Ice Cream',
    restaurant_id: '40360076'
  },
  {
    _id: ObjectId("6521555101dd272e26a91084"),
    borough: 'Brooklyn',
    cuisine: 'Delicatessen',
    name: 'Nordic Delicacies',
    restaurant_id: '40361390'
  },
  {
    _id: ObjectId("6521555101dd272e26a91085"),
    borough: 'Manhattan',
    cuisine: 'American',
    name: '1 East 66Th Street Kitchen',
    restaurant_id: '40359480'
  },
  {
    _id: ObjectId("6521555101dd272e26a91086"),
    borough: 'Manhattan',
    cuisine: 'American',
    name: 'Glorious Food',
    restaurant_id: '40361521'
  },
  {
    _id: ObjectId("6521555101dd272e26a91087"),
    borough: 'Brooklyn',
    cuisine: 'American',
    name: 'The Movable Feast',
    restaurant_id: '40361606'
  }
]
3. Write a MongoDB query to display the fields restaurant_id, name, borough and cuisine,
but exclude the field _id for all the documents in the collection restaurant.
iacsd0923> db.restuarant.find({},{restaurant_id:1,name:1,borough:1,cuisine:1,_id:0})
[
  {
    borough: 'Brooklyn',
    cuisine: 'American',
    name: 'Riviera Caterer',
    restaurant_id: '40356018'
  },
  {
    borough: 'Brooklyn',
    cuisine: 'Hamburgers',
    name: "Wendy'S",
    restaurant_id: '30112340'
  },
  {
    borough: 'Manhattan',
    cuisine: 'Irish',
    name: 'Dj Reynolds Pub And Restaurant',
    restaurant_id: '30191841'
  },
  {
    borough: 'Bronx',
    cuisine: 'Bakery',
    name: 'Morris Park Bake Shop',
    restaurant_id: '30075445'
  },
  {
    borough: 'Queens',
    cuisine: 'American',
    name: 'Brunos On The Boulevard',
    restaurant_id: '40356151'
  },
  {
    borough: 'Staten Island',
    cuisine: 'Jewish/Kosher',
    name: 'Kosher Island',
    restaurant_id: '40356442'
  },
  {
    borough: 'Queens',
    cuisine: 'Jewish/Kosher',
    name: 'Tov Kosher Kitchen',
    restaurant_id: '40356068'
  },
  {
    borough: 'Brooklyn',
    cuisine: 'Delicatessen',
    name: "Wilken'S Fine Food",
    restaurant_id: '40356483'
  },
  {
    borough: 'Brooklyn',
    cuisine: 'American',
    name: 'Regina Caterers',
    restaurant_id: '40356649'
  },
  {
    borough: 'Brooklyn',
    cuisine: 'Ice Cream, Gelato, Yogurt, Ices',
    name: 'Taste The Tropics Ice Cream',
    restaurant_id: '40356731'
  },
  {
    borough: 'Bronx',
    cuisine: 'American',
    name: 'Wild Asia',
    restaurant_id: '40357217'
  },
  {
    borough: 'Brooklyn',
    cuisine: 'Chinese',
    name: 'May May Kitchen',
    restaurant_id: '40358429'
  },
  {
    borough: 'Brooklyn',
    cuisine: 'American',
    name: 'C & C Catering Service',
    restaurant_id: '40357437'
  },
  {
    borough: 'Queens',
    cuisine: 'Ice Cream, Gelato, Yogurt, Ices',
    name: 'Carvel Ice Cream',
    restaurant_id: '40361322'
  },
  {
    borough: 'Brooklyn',
    cuisine: 'Jewish/Kosher',
    name: 'Seuda Foods',
    restaurant_id: '40360045'
  },
  {
    borough: 'Brooklyn',
    cuisine: 'Ice Cream, Gelato, Yogurt, Ices',
    name: 'Carvel Ice Cream',
    restaurant_id: '40360076'
  },
  {
    borough: 'Brooklyn',
    cuisine: 'Delicatessen',
    name: 'Nordic Delicacies',
    restaurant_id: '40361390'
  },
  {
    borough: 'Manhattan',
    cuisine: 'American',
    name: '1 East 66Th Street Kitchen',
    restaurant_id: '40359480'
  },
  {
    borough: 'Manhattan',
    cuisine: 'American',
    name: 'Glorious Food',
    restaurant_id: '40361521'
  },
  {
    borough: 'Brooklyn',
    cuisine: 'American',
    name: 'The Movable Feast',
    restaurant_id: '40361606'
  }
]
4. Write a MongoDB query to display the fields restaurant_id, name, borough and zip code,
but exclude the field _id for all the documents in the collection restaurant.
iacsd0923> db.restuarant.find({},{restaurant_id:1,name:1,borough:1,address:{zipcodezipcode:1},_id:0})
[
  {
    address: { zipcode: '11224' },
    borough: 'Brooklyn',
    name: 'Riviera Caterer',
    restaurant_id: '40356018'
  },
  {
    address: { zipcode: '11225' },
    borough: 'Brooklyn',
    name: "Wendy'S",
    restaurant_id: '30112340'
  },
  {
    address: { zipcode: '10019' },
    borough: 'Manhattan',
    name: 'Dj Reynolds Pub And Restaurant',
    restaurant_id: '30191841'
  },
  {
    address: { zipcode: '10462' },
    borough: 'Bronx',
    name: 'Morris Park Bake Shop',
    restaurant_id: '30075445'
  },
  {
    address: { zipcode: '11369' },
    borough: 'Queens',
    name: 'Brunos On The Boulevard',
    restaurant_id: '40356151'
  },
  {
    address: { zipcode: '10314' },
    borough: 'Staten Island',
    name: 'Kosher Island',
    restaurant_id: '40356442'
  },
  {
    address: { zipcode: '11374' },
    borough: 'Queens',
    name: 'Tov Kosher Kitchen',
    restaurant_id: '40356068'
  },
  {
    address: { zipcode: '11234' },
    borough: 'Brooklyn',
    name: "Wilken'S Fine Food",
    restaurant_id: '40356483'
  },
  {
    address: { zipcode: '11219' },
    borough: 'Brooklyn',
    name: 'Regina Caterers',
    restaurant_id: '40356649'
  },
  {
    address: { zipcode: '11226' },
    borough: 'Brooklyn',
    name: 'Taste The Tropics Ice Cream',
    restaurant_id: '40356731'
  },
  {
    address: { zipcode: '10460' },
    borough: 'Bronx',
    name: 'Wild Asia',
    restaurant_id: '40357217'
  },
  {
    address: { zipcode: '11208' },
    borough: 'Brooklyn',
    name: 'May May Kitchen',
    restaurant_id: '40358429'
  },
  {
    address: { zipcode: '11214' },
    borough: 'Brooklyn',
    name: 'C & C Catering Service',
    restaurant_id: '40357437'
  },
  {
    address: { zipcode: '11004' },
    borough: 'Queens',
    name: 'Carvel Ice Cream',
    restaurant_id: '40361322'
  },
  {
    address: { zipcode: '11223' },
    borough: 'Brooklyn',
    name: 'Seuda Foods',
    restaurant_id: '40360045'
  },
  {
    address: { zipcode: '11218' },
    borough: 'Brooklyn',
    name: 'Carvel Ice Cream',
    restaurant_id: '40360076'
  },
  {
    address: { zipcode: '11209' },
    borough: 'Brooklyn',
    name: 'Nordic Delicacies',
    restaurant_id: '40361390'
  },
  {
    address: { zipcode: '10065' },
    borough: 'Manhattan',
    name: '1 East 66Th Street Kitchen',
    restaurant_id: '40359480'
  },
  {
    address: { zipcode: '10021' },
    borough: 'Manhattan',
    name: 'Glorious Food',
    restaurant_id: '40361521'
  },
  {
    address: { zipcode: '11215' },
    borough: 'Brooklyn',
    name: 'The Movable Feast',
    restaurant_id: '40361606'
  }
]
5. Write a MongoDB query to display all the restaurant which is in the borough Bronx
iacsd0923> db.restuarant.find({borough:'Bronx'},{restaurant_id:1,name:1,borouborough:1,address:{zipcode:1},_id:0})
[
  {
    address: { zipcode: '10462' },
    borough: 'Bronx',
    name: 'Morris Park Bake Shop',
    restaurant_id: '30075445'
  },
  {
    address: { zipcode: '10460' },
    borough: 'Bronx',
    name: 'Wild Asia',
    restaurant_id: '40357217'
  },
  {
    address: { zipcode: '10466' },
    borough: 'Bronx',
    name: 'Carvel Ice Cream',
    restaurant_id: '40363093'
  },
  {
    address: { zipcode: '10474' },
    borough: 'Bronx',
    name: 'Happy Garden',
    restaurant_id: '40363289'
  },
  {
    address: { zipcode: '10458' },
    borough: 'Bronx',
    name: 'Happy Garden',
    restaurant_id: '40364296'
  },
  {
    address: { zipcode: '10465' },
    borough: 'Bronx',
    name: 'Manhem Club',
    restaurant_id: '40364363'
  },
  {
    address: { zipcode: '10462' },
    borough: 'Bronx',
    name: 'The New Starling Athletic Club Of The Bronx',
    restaurant_id: '40364956'
  },
  {
    address: { zipcode: '10451' },
    borough: 'Bronx',
    name: 'Yankee Tavern',
    restaurant_id: '40365499'
  },
  {
    address: { zipcode: '10467' },
    borough: 'Bronx',
    name: 'Mcdwyers Pub',
    restaurant_id: '40365893'
  },
  {
    address: { zipcode: '10463' },
    borough: 'Bronx',
    name: 'The Punch Bowl',
    restaurant_id: '40366497'
  },
  {
    address: { zipcode: '10452' },
    borough: 'Bronx',
    name: 'Munchtime',
    restaurant_id: '40366748'
  },
  {
    address: { zipcode: '10475' },
    borough: 'Bronx',
    name: 'Ihop',
    restaurant_id: '40366833'
  },
  {
    address: { zipcode: '10462' },
    borough: 'Bronx',
    name: "Lulu'S Coffee Shop",
    restaurant_id: '40366938'
  },
  {
    address: { zipcode: '10465' },
    borough: 'Bronx',
    name: 'Marina Delray',
    restaurant_id: '40367161'
  },
  {
    address: { zipcode: '10460' },
    borough: 'Bronx',
    name: 'Terrace Cafe',
    restaurant_id: '40368018'
  },
  {
    address: { zipcode: '10460' },
    borough: 'Bronx',
    name: 'African Terrace',
    restaurant_id: '40368021'
  },
  {
    address: { zipcode: '10470' },
    borough: 'Bronx',
    name: "The Lark'S Nest",
    restaurant_id: '40367946'
  },
  {
    address: { zipcode: '10460' },
    borough: 'Bronx',
    name: 'Cool Zone',
    restaurant_id: '40368022'
  },
  {
    address: { zipcode: '10460' },
    borough: 'Bronx',
    name: 'African Market (Baboon Cafe)',
    restaurant_id: '40368026'
  },
  {
    address: { zipcode: '10460' },
    borough: 'Bronx',
    name: 'Beaver Pond',
    restaurant_id: '40368025'
  }
]
6. Write a MongoDB query to display the first 5 restaurant which is in the borough Bronx.
iacsd0923> db.restuarant.find({borough:'Bronx'},{restaurant_id:1,name:1,borouborough:1,address:{zipcode:1},_id:0})
[
  {
    address: { zipcode: '10462' },
    borough: 'Bronx',
    name: 'Morris Park Bake Shop',
    restaurant_id: '30075445'
  },
  {
    address: { zipcode: '10460' },
    borough: 'Bronx',
    name: 'Wild Asia',
    restaurant_id: '40357217'
  },
  {
    address: { zipcode: '10466' },
    borough: 'Bronx',
    name: 'Carvel Ice Cream',
    restaurant_id: '40363093'
  },
  {
    address: { zipcode: '10474' },
    borough: 'Bronx',
    name: 'Happy Garden',
    restaurant_id: '40363289'
  },
  {
    address: { zipcode: '10458' },
    borough: 'Bronx',
    name: 'Happy Garden',
    restaurant_id: '40364296'
  },
  {
    address: { zipcode: '10465' },
    borough: 'Bronx',
    name: 'Manhem Club',
    restaurant_id: '40364363'
  },
  {
    address: { zipcode: '10462' },
    borough: 'Bronx',
    name: 'The New Starling Athletic Club Of The Bronx',
    restaurant_id: '40364956'
  },
  {
    address: { zipcode: '10451' },
    borough: 'Bronx',
    name: 'Yankee Tavern',
    restaurant_id: '40365499'
  },
  {
    address: { zipcode: '10467' },
    borough: 'Bronx',
    name: 'Mcdwyers Pub',
    restaurant_id: '40365893'
  },
  {
    address: { zipcode: '10463' },
    borough: 'Bronx',
    name: 'The Punch Bowl',
    restaurant_id: '40366497'
  },
  {
    address: { zipcode: '10452' },
    borough: 'Bronx',
    name: 'Munchtime',
    restaurant_id: '40366748'
  },
  {
    address: { zipcode: '10475' },
    borough: 'Bronx',
    name: 'Ihop',
    restaurant_id: '40366833'
  },
  {
    address: { zipcode: '10462' },
    borough: 'Bronx',
    name: "Lulu'S Coffee Shop",
    restaurant_id: '40366938'
  },
  {
    address: { zipcode: '10465' },
    borough: 'Bronx',
    name: 'Marina Delray',
    restaurant_id: '40367161'
  },
  {
    address: { zipcode: '10460' },
    borough: 'Bronx',
    name: 'Terrace Cafe',
    restaurant_id: '40368018'
  },
  {
    address: { zipcode: '10460' },
    borough: 'Bronx',
    name: 'African Terrace',
    restaurant_id: '40368021'
  },
  {
    address: { zipcode: '10470' },
    borough: 'Bronx',
    name: "The Lark'S Nest",
    restaurant_id: '40367946'
  },
  {
    address: { zipcode: '10460' },
    borough: 'Bronx',
    name: 'Cool Zone',
    restaurant_id: '40368022'
  },
  {
    address: { zipcode: '10460' },
    borough: 'Bronx',
    name: 'African Market (Baboon Cafe)',
    restaurant_id: '40368026'
  },
  {
    address: { zipcode: '10460' },
    borough: 'Bronx',
    name: 'Beaver Pond',
    restaurant_id: '40368025'
  }
]
7.Write a MongoDB query to display the next 5 restaurants after skipping first 5 which are in
the borough Bronx.
iacsd0923> db.restuarant.find({},{restaurant_id:1,name:1}).limit(5).skip(5)
[To exit, press Ctrl+C again or Ctrl+D or type .exit)
  {
    _id: ObjectId("6521555101dd272e26a91079"),
    name: 'Kosher Island',
    restaurant_id: '40356442'
  },
  {
    _id: ObjectId("6521555101dd272e26a9107a"),
    name: 'Tov Kosher Kitchen',
    restaurant_id: '40356068'
  },
  {
    _id: ObjectId("6521555101dd272e26a9107b"),
    name: "Wilken'S Fine Food",
    restaurant_id: '40356483'
  },
  {
    _id: ObjectId("6521555101dd272e26a9107c"),
    name: 'Regina Caterers',
    restaurant_id: '40356649'
  },
  {
    _id: ObjectId("6521555101dd272e26a9107d"),
    name: 'Taste The Tropics Ice Cream',
    restaurant_id: '40356731'
  }
]

8. Write a MongoDB query to find the restaurants who achieved a score more than 90.
iacsd0923> db.restuarant.find({'grades.score':{$gt:90}})
[
  {
    _id: ObjectId("6521555101dd272e26a911d3"),
    address: {
      building: '65',
      coord: [ -73.9782725, 40.7624022 ],
      street: 'West   54 Street',
      zipcode: '10019'
    },
    borough: 'Manhattan',
    cuisine: 'American',
    grades: [
      {
        date: ISODate("2014-08-22T00:00:00.000Z"),
        grade: 'A',
        score: 11
      },
      {
        date: ISODate("2014-03-28T00:00:00.000Z"),
        grade: 'C',
        score: 131
      },
      {
        date: ISODate("2013-09-25T00:00:00.000Z"),
        grade: 'A',
        score: 11
      },
      {
        date: ISODate("2013-04-08T00:00:00.000Z"),
        grade: 'B',
        score: 25
      },
      {
        date: ISODate("2012-10-15T00:00:00.000Z"),
        grade: 'A',
        score: 11
      },
      {
        date: ISODate("2011-10-19T00:00:00.000Z"),
        grade: 'A',
        score: 13
      }
    ],
    name: "Murals On 54/Randolphs'S",
    restaurant_id: '40372466'
  },
  {
    _id: ObjectId("6521555101dd272e26a91271"),
    address: {
      building: '345',
      coord: [ -73.9864626, 40.7266739 ],
      street: 'East 6 Street',
      zipcode: '10003'
    },
    borough: 'Manhattan',
    cuisine: 'Indian',
    grades: [
      {
        date: ISODate("2014-09-15T00:00:00.000Z"),
        grade: 'A',
        score: 5
      },
      {
        date: ISODate("2014-01-14T00:00:00.000Z"),
        grade: 'A',
        score: 8
      },
      {
        date: ISODate("2013-05-30T00:00:00.000Z"),
        grade: 'A',
        score: 12
      },
      {
        date: ISODate("2013-04-24T00:00:00.000Z"),
        grade: 'P',
        score: 2
      },
      {
        date: ISODate("2012-10-01T00:00:00.000Z"),
        grade: 'A',
        score: 9
      },
      {
        date: ISODate("2012-04-06T00:00:00.000Z"),
        grade: 'C',
        score: 92
      },
      {
        date: ISODate("2011-11-03T00:00:00.000Z"),
        grade: 'C',
        score: 41
      }
    ],
    name: 'Gandhi',
    restaurant_id: '40381295'
  },
  {
    _id: ObjectId("6521555101dd272e26a913d5"),
    address: {
      building: '130',
      coord: [ -73.984758, 40.7457939 ],
      street: 'Madison Avenue',
      zipcode: '10016'
    },
    borough: 'Manhattan',
    cuisine: 'Pizza/Italian',
    grades: [
      {
        date: ISODate("2014-12-24T00:00:00.000Z"),
        grade: 'Z',
        score: 31
      },
      {
        date: ISODate("2014-06-17T00:00:00.000Z"),
        grade: 'C',
        score: 98
      },
      {
        date: ISODate("2013-12-12T00:00:00.000Z"),
        grade: 'C',
        score: 32
      },
      {
        date: ISODate("2013-05-22T00:00:00.000Z"),
        grade: 'B',
        score: 21
      },
      {
        date: ISODate("2012-05-02T00:00:00.000Z"),
        grade: 'A',
        score: 11
      }
    ],
    name: 'Bella Napoli',
    restaurant_id: '40393488'
  },
  {
    _id: ObjectId("6521555201dd272e26a943fd"),
    address: {
      building: '1724',
      coord: [ -73.94981, 40.780043 ],
      street: '2 Avenue',
      zipcode: '10128'
    },
    borough: 'Manhattan',
    cuisine: 'Indian',
    grades: [
      {
        date: ISODate("2014-09-25T00:00:00.000Z"),
        grade: 'A',
        score: 7
      },
      {
        date: ISODate("2014-03-20T00:00:00.000Z"),
        grade: 'A',
        score: 12
      },
      {
        date: ISODate("2013-09-09T00:00:00.000Z"),
        grade: 'B',
        score: 21
      },
      {
        date: ISODate("2013-03-25T00:00:00.000Z"),
        grade: 'B',
        score: 18
      },
      {
        date: ISODate("2012-08-15T00:00:00.000Z"),
        grade: 'A',
        score: 11
      },
      {
        date: ISODate("2011-12-23T00:00:00.000Z"),
        grade: 'C',
        score: 98
      }
    ],
    name: "Baluchi'S Indian Food",
    restaurant_id: '41569277'
  }
]
9. Write a MongoDB query to find the restaurants that achieved a score, more than 80 but
less than 100.
iacsd0923> db.restuarant.find({'grades.score':{$gt:80,$lt:100}})
[
  {
    _id: ObjectId("6521555101dd272e26a911d3"),
    address: {
      building: '65',
      coord: [ -73.9782725, 40.7624022 ],
      street: 'West   54 Street',
      zipcode: '10019'
    },
    borough: 'Manhattan',
    cuisine: 'American',
    grades: [
      {
        date: ISODate("2014-08-22T00:00:00.000Z"),
        grade: 'A',
        score: 11
      },
      {
        date: ISODate("2014-03-28T00:00:00.000Z"),
        grade: 'C',
        score: 131
      },
      {
        date: ISODate("2013-09-25T00:00:00.000Z"),
        grade: 'A',
        score: 11
      },
      {
        date: ISODate("2013-04-08T00:00:00.000Z"),
        grade: 'B',
        score: 25
      },
      {
        date: ISODate("2012-10-15T00:00:00.000Z"),
        grade: 'A',
        score: 11
      },
      {
        date: ISODate("2011-10-19T00:00:00.000Z"),
        grade: 'A',
        score: 13
      }
    ],
    name: "Murals On 54/Randolphs'S",
    restaurant_id: '40372466'
  },
  {
    _id: ObjectId("6521555101dd272e26a91271"),
    address: {
      building: '345',
      coord: [ -73.9864626, 40.7266739 ],
      street: 'East 6 Street',
      zipcode: '10003'
    },
    borough: 'Manhattan',
    cuisine: 'Indian',
    grades: [
      {
        date: ISODate("2014-09-15T00:00:00.000Z"),
        grade: 'A',
        score: 5
      },
      {
        date: ISODate("2014-01-14T00:00:00.000Z"),
        grade: 'A',
        score: 8
      },
      {
        date: ISODate("2013-05-30T00:00:00.000Z"),
        grade: 'A',
        score: 12
      },
      {
        date: ISODate("2013-04-24T00:00:00.000Z"),
        grade: 'P',
        score: 2
      },
      {
        date: ISODate("2012-10-01T00:00:00.000Z"),
        grade: 'A',
        score: 9
      },
      {
        date: ISODate("2012-04-06T00:00:00.000Z"),
        grade: 'C',
        score: 92
      },
      {
        date: ISODate("2011-11-03T00:00:00.000Z"),
        grade: 'C',
        score: 41
      }
    ],
    name: 'Gandhi',
    restaurant_id: '40381295'
  },
  {
    _id: ObjectId("6521555101dd272e26a913d5"),
    address: {
      building: '130',
      coord: [ -73.984758, 40.7457939 ],
      street: 'Madison Avenue',
      zipcode: '10016'
    },
    borough: 'Manhattan',
    cuisine: 'Pizza/Italian',
    grades: [
      {
        date: ISODate("2014-12-24T00:00:00.000Z"),
        grade: 'Z',
        score: 31
      },
      {
        date: ISODate("2014-06-17T00:00:00.000Z"),
        grade: 'C',
        score: 98
      },
      {
        date: ISODate("2013-12-12T00:00:00.000Z"),
        grade: 'C',
        score: 32
      },
      {
        date: ISODate("2013-05-22T00:00:00.000Z"),
        grade: 'B',
        score: 21
      },
      {
        date: ISODate("2012-05-02T00:00:00.000Z"),
        grade: 'A',
        score: 11
      }
    ],
    name: 'Bella Napoli',
    restaurant_id: '40393488'
  },
  {
    _id: ObjectId("6521555101dd272e26a91c42"),
    address: {
      building: '',
      coord: [ -74.0163793, 40.7167671 ],
      street: 'Hudson River',
      zipcode: '10282'
    },
    borough: 'Manhattan',
    cuisine: 'American',
    grades: [
      {
        date: ISODate("2014-06-27T00:00:00.000Z"),
        grade: 'C',
        score: 89
      },
      {
        date: ISODate("2013-06-06T00:00:00.000Z"),
        grade: 'A',
        score: 6
      },
      {
        date: ISODate("2012-06-19T00:00:00.000Z"),
        grade: 'A',
        score: 13
      }
    ],
    name: 'West 79Th Street Boat Basin Cafe',
    restaurant_id: '40756344'
  },
  {
    _id: ObjectId("6521555101dd272e26a9217c"),
    address: {
      building: '7705',
      coord: [ -73.8878704, 40.7435875 ],
      street: 'Woodside Avenue',
      zipcode: '11373'
    },
    borough: 'Queens',
    cuisine: 'Thai',
    grades: [
      {
        date: ISODate("2014-05-12T00:00:00.000Z"),
        grade: 'B',
        score: 14
      },
      {
        date: ISODate("2013-11-20T00:00:00.000Z"),
        grade: 'C',
        score: 84
      },
      {
        date: ISODate("2012-09-18T00:00:00.000Z"),
        grade: 'A',
        score: 11
      },
      {
        date: ISODate("2012-05-03T00:00:00.000Z"),
        grade: 'B',
        score: 23
      }
    ],
    name: 'Spicy Shallot',
    restaurant_id: '40979431'
  },
  {
    _id: ObjectId("6521555101dd272e26a921b2"),
    address: {
      building: '466',
      coord: [ -73.9747277, 40.7536114 ],
      street: 'Lexington Avenue',
      zipcode: '10017'
    },
    borough: 'Manhattan',
    cuisine: 'American',
    grades: [
      {
        date: ISODate("2014-10-14T00:00:00.000Z"),
        grade: 'C',
        score: 84
      },
      {
        date: ISODate("2014-02-14T00:00:00.000Z"),
        grade: 'A',
        score: 5
      },
      {
        date: ISODate("2013-07-11T00:00:00.000Z"),
        grade: 'A',
        score: 10
      },
      {
        date: ISODate("2013-01-29T00:00:00.000Z"),
        grade: 'C',
        score: 36
      },
      {
        date: ISODate("2012-08-15T00:00:00.000Z"),
        grade: 'A',
        score: 12
      },
      {
        date: ISODate("2012-03-22T00:00:00.000Z"),
        grade: 'B',
        score: 27
      }
    ],
    name: 'Bistro Caterers',
    restaurant_id: '40987023'
  },
  {
    _id: ObjectId("6521555201dd272e26a9334a"),
    address: {
      building: '320',
      coord: [ -73.9934047, 40.7544014 ],
      street: 'West   37 Street',
      zipcode: '10018'
    },
    borough: 'Manhattan',
    cuisine: 'American',
    grades: [
      {
        date: ISODate("2014-09-16T00:00:00.000Z"),
        grade: 'C',
        score: 90
      },
      {
        date: ISODate("2014-02-21T00:00:00.000Z"),
        grade: 'B',
        score: 27
      },
      {
        date: ISODate("2012-10-01T00:00:00.000Z"),
        grade: 'A',
        score: 12
      },
      {
        date: ISODate("2012-03-01T00:00:00.000Z"),
        grade: 'A',
        score: 10
      }
    ],
    name: 'Concrete Restaurant',
    restaurant_id: '41363541'
  },
  {
    _id: ObjectId("6521555201dd272e26a93734"),
    address: {
      building: '222',
      coord: [ -73.9579033, 40.7332745 ],
      street: 'Franklin Street',
      zipcode: '11222'
    },
    borough: 'Brooklyn',
    cuisine: 'Italian',
    grades: [
      {
        date: ISODate("2014-12-11T00:00:00.000Z"),
        grade: 'Z',
        score: 18
      },
      {
        date: ISODate("2013-10-31T00:00:00.000Z"),
        grade: 'A',
        score: 12
      },
      {
        date: ISODate("2013-03-20T00:00:00.000Z"),
        grade: 'B',
        score: 24
      },
      {
        date: ISODate("2012-07-18T00:00:00.000Z"),
        grade: 'B',
        score: 18
      },
      {
        date: ISODate("2012-01-12T00:00:00.000Z"),
        grade: 'C',
        score: 81
      }
    ],
    name: 'Anella',
    restaurant_id: '41410058'
  },
  {
    _id: ObjectId("6521555201dd272e26a943fd"),
    address: {
      building: '1724',
      coord: [ -73.94981, 40.780043 ],
      street: '2 Avenue',
      zipcode: '10128'
    },
    borough: 'Manhattan',
    cuisine: 'Indian',
    grades: [
      {
        date: ISODate("2014-09-25T00:00:00.000Z"),
        grade: 'A',
        score: 7
      },
      {
        date: ISODate("2014-03-20T00:00:00.000Z"),
        grade: 'A',
        score: 12
      },
      {
        date: ISODate("2013-09-09T00:00:00.000Z"),
        grade: 'B',
        score: 21
      },
      {
        date: ISODate("2013-03-25T00:00:00.000Z"),
        grade: 'B',
        score: 18
      },
      {
        date: ISODate("2012-08-15T00:00:00.000Z"),
        grade: 'A',
        score: 11
      },
      {
        date: ISODate("2011-12-23T00:00:00.000Z"),
        grade: 'C',
        score: 98
      }
    ],
    name: "Baluchi'S Indian Food",
    restaurant_id: '41569277'
  },
  {
    _id: ObjectId("6521555201dd272e26a9448c"),
    address: {
      building: '116',
      coord: [ -73.98978509999999, 40.7487912 ],
      street: 'West   32 Street',
      zipcode: '10001'
    },
    borough: 'Manhattan',
    cuisine: 'American',
    grades: [
      {
        date: ISODate("2014-02-11T00:00:00.000Z"),
        grade: 'A',
        score: 11
      },
      {
        date: ISODate("2013-10-10T00:00:00.000Z"),
        grade: 'A',
        score: 11
      },
      {
        date: ISODate("2013-04-29T00:00:00.000Z"),
        grade: 'C',
        score: 82
      },
      {
        date: ISODate("2012-04-30T00:00:00.000Z"),
        grade: 'A',
        score: 11
      },
      {
        date: ISODate("2011-12-21T00:00:00.000Z"),
        grade: 'B',
        score: 19
      },
      {
        date: ISODate("2011-07-20T00:00:00.000Z"),
        grade: 'C',
        score: 29
      }
    ],
    name: 'Cafe R',
    restaurant_id: '41574642'
  },
  {
    _id: ObjectId("6521555201dd272e26a95939"),
    address: {
      building: '5616',
      coord: [ -74.009993, 40.638865 ],
      street: '7 Avenue',
      zipcode: '11220'
    },
    borough: 'Brooklyn',
    cuisine: 'Chinese',
    grades: [
      {
        date: ISODate("2014-11-24T00:00:00.000Z"),
        grade: 'C',
        score: 86
      },
      {
        date: ISODate("2014-06-24T00:00:00.000Z"),
        grade: 'B',
        score: 20
      },
      {
        date: ISODate("2014-01-07T00:00:00.000Z"),
        grade: 'A',
        score: 11
      },
      {
        date: ISODate("2013-06-13T00:00:00.000Z"),
        grade: 'A',
        score: 10
      }
    ],
    name: 'D & Y Restaurant',
    restaurant_id: '50000040'
  },
  {
    _id: ObjectId("6521555201dd272e26a96c5e"),
    address: {
      building: '1898',
      coord: [ -73.910439, 40.8499696 ],
      street: 'Jerome Avenue',
      zipcode: '10453'
    },
    borough: 'Bronx',
    cuisine: 'Latin (Cuban, Dominican, Puerto Rican, South & Central American)',
    grades: [
      {
        date: ISODate("2015-01-06T00:00:00.000Z"),
        grade: 'A',
        score: 10
      },
      {
        date: ISODate("2014-10-07T00:00:00.000Z"),
        grade: 'C',
        score: 82
      }
    ],
    name: 'La Potencia Restaurant',
    restaurant_id: '50014192'
  }
]
10. Write a MongoDB query to find the restaurants which locate in latitude value less than -
95.754168.
iacsd0923> db.restaurent.find({cuisine:{$ne:'American'},'grades.score':{$gt:70},'address.coord.0':{$lt:-65.754168}},{_id:0,name:1,'grades.score':1,'address.coord':1, restaurant_id:1})
[
  {
    address: { coord: [ -73.9864626, 40.7266739 ] },
    grades: [
      { score: 5 },
      { score: 8 },
      { score: 12 },
      { score: 2 },
      { score: 9 },
      { score: 92 },
      { score: 41 }
    ],
    name: 'Gandhi',
    restaurant_id: '40381295'
  },
  {
    address: { coord: [ -73.984758, 40.7457939 ] },
    grades: [
      { score: 31 },
      { score: 98 },
      { score: 32 },
      { score: 21 },
      { score: 11 }
    ],
    name: 'Bella Napoli',
    restaurant_id: '40393488'
  },
  {
    address: { coord: [ -73.9243061, 40.8276297 ] },
    grades: [
      { score: 10 },
      { score: 6 },
      { score: 25 },
      { score: 12 },
      { score: 12 },
      { score: 14 },
      { score: 26 },
      { score: 76 }
    ],
    name: 'El Molino Rojo Restaurant',
    restaurant_id: '40393688'
  },
  {
    address: { coord: [ -73.94610279999999, 40.7137587 ] },
    grades: [
      { score: 10 },
      { score: 10 },
      { score: 13 },
      { score: 18 },
      { score: 9 },
      { score: 8 },
      { score: 77 }
    ],
    name: 'Fortunato Bros Cafe & Bakery',
    restaurant_id: '40400561'
  },
  {
    address: { coord: [ -73.9772294, 40.7527262 ] },
    grades: [
      { score: 20 },
      { score: 14 },
      { score: 13 },
      { score: 76 },
      { score: 12 }
    ],
    name: 'Two Boots Grand Central',
    restaurant_id: '40725591'
  },
  {
    address: { coord: [ -73.8878704, 40.7435875 ] },
    grades: [ { score: 14 }, { score: 84 }, { score: 11 }, { score: 23 } ],
    name: 'Spicy Shallot',
    restaurant_id: '40979431'
  },
  {
    address: { coord: [ -73.987977, 40.75519500000001 ] },
    grades: [
      { score: 7 },
      { score: 23 },
      { score: 77 },
      { score: 21 },
      { score: 21 },
      { score: 23 }
    ],
    name: 'Midtown Buffet',
    restaurant_id: '41038679'
  },
  {
    address: { coord: [ -73.97757399999999, 40.67127 ] },
    grades: [
      { score: 10 },
      { score: 27 },
      { score: 12 },
      { score: 22 },
      { score: 77 },
      { score: 12 }
    ],
    name: "Pino'S La Forchetta",
    restaurant_id: '41129343'
  },
  {
    address: { coord: [ -73.9651337, 40.6937213 ] },
    grades: [
      { score: 17 },
      { score: 73 },
      { score: 10 },
      { score: 25 },
      { score: 8 }
    ],
    name: 'Los Pollitos Iii',
    restaurant_id: '41163308'
  },
  {
    address: { coord: [ -73.981843, 40.741207 ] },
    grades: [
      { score: 10 },
      { score: 10 },
      { score: 13 },
      { score: 26 },
      { score: 18 },
      { score: 76 },
      { score: 12 }
    ],
    name: 'East Japanese Restaurant',
    restaurant_id: '41242254'
  },
  {
    address: { coord: [ -73.861317, 40.7502198 ] },
    grades: [
      { score: 9 },
      { score: 9 },
      { score: 11 },
      { score: 73 },
      { score: 10 },
      { score: 21 }
    ],
    name: 'Los Mismo Restaurant',
    restaurant_id: '41288811'
  },
  {
    address: { coord: [ -73.94352959999999, 40.8361392 ] },
    grades: [
      { score: 11 },
      { score: 27 },
      { score: 5 },
      { score: 12 },
      { score: 26 },
      { score: 77 }
    ],
    name: 'Brothers Fish Market',
    restaurant_id: '41297769'
  },
  {
    address: { coord: [ -73.9579033, 40.7332745 ] },
    grades: [
      { score: 18 },
      { score: 12 },
      { score: 24 },
      { score: 18 },
      { score: 81 }
    ],
    name: 'Anella',
    restaurant_id: '41410058'
  },
  {
    address: { coord: [ -73.9087571, 40.8539355 ] },
    grades: [
      { score: 15 },
      { score: 7 },
      { score: 6 },
      { score: 12 },
      { score: 73 },
      { score: 23 }
    ],
    name: 'Ming Wong Restaurant',
    restaurant_id: '41563476'
  },
  {
    address: { coord: [ -73.94981, 40.780043 ] },
    grades: [
      { score: 7 },
      { score: 12 },
      { score: 21 },
      { score: 18 },
      { score: 11 },
      { score: 98 }
    ],
    name: "Baluchi'S Indian Food",
    restaurant_id: '41569277'
  },
  {
    address: { coord: [ -73.970671, 40.7515735 ] },
    grades: [
      { score: 12 },
      { score: 10 },
      { score: 13 },
      { score: 11 },
      { score: 14 },
      { score: 79 }
    ],
    name: 'La Trattoria',
    restaurant_id: '41595287'
  },
  {
    address: { coord: [ -73.7874367, 40.7581296 ] },
    grades: [
      { score: 78 },
      { score: 23 },
      { score: 9 },
      { score: 12 },
      { score: 27 }
    ],
    name: 'Gal Bi Ma Eul',
    restaurant_id: '41608854'
  },
  {
    address: { coord: [ -73.99836309999999, 40.7158265 ] },
    grades: [
      { score: 25 },
      { score: 22 },
      { score: 9 },
      { score: 73 },
      { score: 10 }
    ],
    name: 'Wonton Noodle Garden',
    restaurant_id: '41614664'
  },
  {
    address: { coord: [ -73.953931, 40.68096 ] },
    grades: [
      { score: 38 },
      { score: 9 },
      { score: 9 },
      { score: 4 },
      { score: 16 },
      { score: 58 },
      { score: 78 }
    ],
    name: 'Cheikh Umar Futiyu Restaurant',
    restaurant_id: '41660581'
  },
  {
    address: { coord: [ -73.9224579, 40.7441205 ] },
    grades: [ { score: 22 }, { score: 12 }, { score: 14 }, { score: 73 } ],
    name: 'Takesushi',
    restaurant_id: '41679611'
  }
]
11. Write a MongoDB query to find the restaurants that do not prepare any cuisine of
'American' and their grade score more than 70 and latitude less than -65.754168.

iacsd0923> db.restuarant.find({cuisine:{$nin:['American']},'grades.score':{$g$gt:70},'address.coord.0':{$lt:[-65.754168]}})
[
  {
    _id: ObjectId("6521555101dd272e26a91271"),
    address: {
      building: '345',
      coord: [ -73.9864626, 40.7266739 ],
      street: 'East 6 Street',
      zipcode: '10003'
    },
    borough: 'Manhattan',
    cuisine: 'Indian',
    grades: [
      {
        date: ISODate("2014-09-15T00:00:00.000Z"),
        grade: 'A',
        score: 5
      },
      {
        date: ISODate("2014-01-14T00:00:00.000Z"),
        grade: 'A',
        score: 8
      },
      {
        date: ISODate("2013-05-30T00:00:00.000Z"),
        grade: 'A',
        score: 12
      },
      {
        date: ISODate("2013-04-24T00:00:00.000Z"),
        grade: 'P',
        score: 2
      },
      {
        date: ISODate("2012-10-01T00:00:00.000Z"),
        grade: 'A',
        score: 9
      },
      {
        date: ISODate("2012-04-06T00:00:00.000Z"),
        grade: 'C',
        score: 92
      },
      {
        date: ISODate("2011-11-03T00:00:00.000Z"),
        grade: 'C',
        score: 41
      }
    ],
    name: 'Gandhi',
    restaurant_id: '40381295'
  },
12. Write a MongoDB query to find the restaurants which do not prepare any cuisine of
'American' and achieved a score more than 70 and located in the longitude less than -
65.754168.
 db.restaurent.find({cuisine:{$ne:'American'},'grades.score':{$gt:70},'address.coord.1':{$lt:65.754168}},{_id:0,name:1,'grades.score':1,'address.coord':1, restaurant_id:1})
[
  {
    address: { coord: [ -73.9864626, 40.7266739 ] },
    grades: [
      { score: 5 },
      { score: 8 },
      { score: 12 },
      { score: 2 },
      { score: 9 },
      { score: 92 },
      { score: 41 }
    ],
    name: 'Gandhi',
    restaurant_id: '40381295'
  },
  {
    address: { coord: [ -73.984758, 40.7457939 ] },
    grades: [
      { score: 31 },
      { score: 98 },
      { score: 32 },
      { score: 21 },
      { score: 11 }
    ],
    name: 'Bella Napoli',
    restaurant_id: '40393488'
  },
  {
    address: { coord: [ -73.9243061, 40.8276297 ] },
    grades: [
      { score: 10 },
      { score: 6 },
      { score: 25 },
      { score: 12 },
      { score: 12 },
      { score: 14 },
      { score: 26 },
      { score: 76 }
    ],
    name: 'El Molino Rojo Restaurant',
    restaurant_id: '40393688'
  },
  {
    address: { coord: [ -73.94610279999999, 40.7137587 ] },
    grades: [
      { score: 10 },
      { score: 10 },
      { score: 13 },
      { score: 18 },
      { score: 9 },
      { score: 8 },
      { score: 77 }
    ],
    name: 'Fortunato Bros Cafe & Bakery',
    restaurant_id: '40400561'
  },
  {
    address: { coord: [ -73.9772294, 40.7527262 ] },
    grades: [
      { score: 20 },
      { score: 14 },
      { score: 13 },
      { score: 76 },
      { score: 12 }
    ],
    name: 'Two Boots Grand Central',
    restaurant_id: '40725591'
  },
  {
    address: { coord: [ -73.8878704, 40.7435875 ] },
    grades: [ { score: 14 }, { score: 84 }, { score: 11 }, { score: 23 } ],
    name: 'Spicy Shallot',
    restaurant_id: '40979431'
  },
  {
    address: { coord: [ -73.987977, 40.75519500000001 ] },
    grades: [
      { score: 7 },
      { score: 23 },
      { score: 77 },
      { score: 21 },
      { score: 21 },
      { score: 23 }
    ],
    name: 'Midtown Buffet',
    restaurant_id: '41038679'
  },
  {
    address: { coord: [ -73.97757399999999, 40.67127 ] },
    grades: [
      { score: 10 },
      { score: 27 },
      { score: 12 },
      { score: 22 },
      { score: 77 },
      { score: 12 }
    ],
    name: "Pino'S La Forchetta",
    restaurant_id: '41129343'
  },
  {
    address: { coord: [ -73.9651337, 40.6937213 ] },
    grades: [
      { score: 17 },
      { score: 73 },
      { score: 10 },
      { score: 25 },
      { score: 8 }
    ],
    name: 'Los Pollitos Iii',
    restaurant_id: '41163308'
  },
  {
    address: { coord: [ -73.981843, 40.741207 ] },
    grades: [
      { score: 10 },
      { score: 10 },
      { score: 13 },
      { score: 26 },
      { score: 18 },
      { score: 76 },
      { score: 12 }
    ],
    name: 'East Japanese Restaurant',
    restaurant_id: '41242254'
  },
  {
    address: { coord: [ -73.861317, 40.7502198 ] },
    grades: [
      { score: 9 },
      { score: 9 },
      { score: 11 },
      { score: 73 },
      { score: 10 },
      { score: 21 }
    ],
    name: 'Los Mismo Restaurant',
    restaurant_id: '41288811'
  },
  {
    address: { coord: [ -73.94352959999999, 40.8361392 ] },
    grades: [
      { score: 11 },
      { score: 27 },
      { score: 5 },
      { score: 12 },
      { score: 26 },
      { score: 77 }
    ],
    name: 'Brothers Fish Market',
    restaurant_id: '41297769'
  },
  {
    address: { coord: [ -73.9579033, 40.7332745 ] },
    grades: [
      { score: 18 },
      { score: 12 },
      { score: 24 },
      { score: 18 },
      { score: 81 }
    ],
    name: 'Anella',
    restaurant_id: '41410058'
  },
  {
    address: { coord: [ -73.9087571, 40.8539355 ] },
    grades: [
      { score: 15 },
      { score: 7 },
      { score: 6 },
      { score: 12 },
      { score: 73 },
      { score: 23 }
    ],
    name: 'Ming Wong Restaurant',
    restaurant_id: '41563476'
  },
  {
    address: { coord: [ -73.94981, 40.780043 ] },
    grades: [
      { score: 7 },
      { score: 12 },
      { score: 21 },
      { score: 18 },
      { score: 11 },
      { score: 98 }
    ],
    name: "Baluchi'S Indian Food",
    restaurant_id: '41569277'
  },
  {
    address: { coord: [ -73.970671, 40.7515735 ] },
    grades: [
      { score: 12 },
      { score: 10 },
      { score: 13 },
      { score: 11 },
      { score: 14 },
      { score: 79 }
    ],
    name: 'La Trattoria',
    restaurant_id: '41595287'
  },
  {
    address: { coord: [ -73.7874367, 40.7581296 ] },
    grades: [
      { score: 78 },
      { score: 23 },
      { score: 9 },
      { score: 12 },
      { score: 27 }
    ],
    name: 'Gal Bi Ma Eul',
    restaurant_id: '41608854'
  },
  {
    address: { coord: [ -73.99836309999999, 40.7158265 ] },
    grades: [
      { score: 25 },
      { score: 22 },
      { score: 9 },
      { score: 73 },
      { score: 10 }
    ],
    name: 'Wonton Noodle Garden',
    restaurant_id: '41614664'
  },
  {
    address: { coord: [ -73.953931, 40.68096 ] },
    grades: [
      { score: 38 },
      { score: 9 },
      { score: 9 },
      { score: 4 },
      { score: 16 },
      { score: 58 },
      { score: 78 }
    ],
    name: 'Cheikh Umar Futiyu Restaurant',
    restaurant_id: '41660581'
  },
  {
    address: { coord: [ -73.9224579, 40.7441205 ] },
    grades: [ { score: 22 }, { score: 12 }, { score: 14 }, { score: 73 } ],
    name: 'Takesushi',
    restaurant_id: '41679611'
  }
]

13. Write a MongoDB query to find the restaurants which do not prepare any cuisine of
'American ' and achieved a grade point 'A' not belongs to the borough Brooklyn. The
document must be displayed according to the cuisine in descending order.
iacsd0923> db.restaurent.find({cuisine:{$ne:'American'},'grades.grade':'A',borough:{$ne:'Brooklyn'}},{restaurant_id:1,_id:0,cuisine:1,'grades.grade':1,borough:1,name:1})
[
  {
    borough: 'Manhattan',
    cuisine: 'Irish',
    grades: [ { grade: 'A' }, { grade: 'A' }, { grade: 'A' }, { grade: 'A' } ],
    name: 'Dj Reynolds Pub And Restaurant',
    restaurant_id: '30191841'
  },
  {
    borough: 'Bronx',
    cuisine: 'Bakery',
    grades: [
      { grade: 'A' },
      { grade: 'A' },
      { grade: 'A' },
      { grade: 'A' },
      { grade: 'B' }
    ],
    name: 'Morris Park Bake Shop',
    restaurant_id: '30075445'
  },
  {
    borough: 'Staten Island',
    cuisine: 'Jewish/Kosher',
    grades: [ { grade: 'A' }, { grade: 'A' }, { grade: 'A' }, { grade: 'A' } ],
    name: 'Kosher Island',
    restaurant_id: '40356442'
  },
  {
    borough: 'Queens',
    cuisine: 'Jewish/Kosher',
    grades: [ { grade: 'Z' }, { grade: 'A' }, { grade: 'A' }, { grade: 'B' } ],
    name: 'Tov Kosher Kitchen',
    restaurant_id: '40356068'
  },
  {
    borough: 'Queens',
    cuisine: 'Ice Cream, Gelato, Yogurt, Ices',
    grades: [ { grade: 'A' }, { grade: 'A' }, { grade: 'A' } ],
    name: 'Carvel Ice Cream',
    restaurant_id: '40361322'
  },
  {
    borough: 'Queens',
    cuisine: 'Delicatessen',
    grades: [ { grade: 'A' }, { grade: 'A' }, { grade: 'A' }, { grade: 'A' } ],
    name: "Sal'S Deli",
    restaurant_id: '40361618'
  },
  {
    borough: 'Manhattan',
    cuisine: 'Delicatessen',
    grades: [ { grade: 'A' }, { grade: 'A' }, { grade: 'A' }, { grade: 'A' } ],
    name: "Bully'S Deli",
    restaurant_id: '40361708'
  },
  {
    borough: 'Queens',
    cuisine: 'Delicatessen',
    grades: [ { grade: 'A' }, { grade: 'A' }, { grade: 'A' }, { grade: 'A' } ],
    name: "Steve Chu'S Deli & Grocery",
    restaurant_id: '40361998'
  },
  {
    borough: 'Manhattan',
    cuisine: 'Chicken',
    grades: [
      { grade: 'A' },
      { grade: 'A' },
      { grade: 'A' },
      { grade: 'A' },
      { grade: 'A' },
      { grade: 'A' }
    ],
    name: "Harriet'S Kitchen",
    restaurant_id: '40362098'
  },
  {
    borough: 'Manhattan',
    cuisine: 'Turkish',
    grades: [ { grade: 'A' }, { grade: 'A' }, { grade: 'A' }, { grade: 'A' } ],
    name: 'The Country Cafe',
    restaurant_id: '40362715'
  },
  {
    borough: 'Bronx',
    cuisine: 'Ice Cream, Gelato, Yogurt, Ices',
    grades: [
      { grade: 'A' },
      { grade: 'A' },
      { grade: 'A' },
      { grade: 'A' },
      { grade: 'A' }
    ],
    name: 'Carvel Ice Cream',
    restaurant_id: '40363093'
  },
  {
    borough: 'Queens',
    cuisine: 'Chinese',
    grades: [
      { grade: 'A' },
      { grade: 'A' },
      { grade: 'A' },
      { grade: 'A' },
      { grade: 'P' },
      { grade: 'A' },
      { grade: 'A' },
      { grade: 'A' }
    ],
    name: 'Ho Mei Restaurant',
    restaurant_id: '40362432'
  },
  {
    borough: 'Manhattan',
    cuisine: 'Bakery',
    grades: [
      { grade: 'A' },
      { grade: 'A' },
      { grade: 'A' },
      { grade: 'A' },
      { grade: 'A' }
    ],
    name: "Olive'S",
    restaurant_id: '40363151'
  },
  {
    borough: 'Bronx',
    cuisine: 'Chinese',
    grades: [ { grade: 'A' }, { grade: 'A' }, { grade: 'B' } ],
    name: 'Happy Garden',
    restaurant_id: '40363289'
  },
  {
    borough: 'Manhattan',
    cuisine: 'Sandwiches/Salads/Mixed Buffet',
    grades: [
      { grade: 'A' },
      { grade: 'A' },
      { grade: 'A' },
      { grade: 'A' },
      { grade: 'A' }
    ],
    name: 'Lexler Deli',
    restaurant_id: '40363426'
  },
  {
    borough: 'Staten Island',
    cuisine: 'Delicatessen',
    grades: [ { grade: 'A' }, { grade: 'A' }, { grade: 'A' }, { grade: 'A' } ],
    name: 'Bagels N Buns',
    restaurant_id: '40363427'
  },
  {
    borough: 'Queens',
    cuisine: 'Delicatessen',
    grades: [
      { grade: 'A' },
      { grade: 'A' },
      { grade: 'A' },
      { grade: 'B' },
      { grade: 'A' },
      { grade: 'A' }
    ],
    name: "Tony'S Deli",
    restaurant_id: '40363333'
  },
  {
    borough: 'Queens',
    cuisine: 'Bagels/Pretzels',
    grades: [
      { grade: 'A' },
      { grade: 'B' },
      { grade: 'A' },
      { grade: 'B' },
      { grade: 'B' },
      { grade: 'B' }
    ],
    name: 'Hot Bagels',
    restaurant_id: '40363565'
  },
  {
    borough: 'Manhattan',
    cuisine: 'Continental',
    grades: [
      { grade: 'A' },
      { grade: 'A' },
      { grade: 'B' },
      { grade: 'A' },
      { grade: 'B' }
    ],
    name: "Lorenzo & Maria'S",
    restaurant_id: '40363630'
  },
  {
    borough: 'Manhattan',
    cuisine: 'Pizza',
    grades: [
      { grade: 'A' },
      { grade: 'A' },
      { grade: 'A' },
      { grade: 'A' },
      { grade: 'A' },
      { grade: 'A' }
    ],
    name: "Domino'S Pizza",
    restaurant_id: '40363644'
  }
]

14. Write a MongoDB query to find the restaurant Id, name, borough and cuisine for those
restaurants which contain 'Wil' as first three letters for its name.

iacsd0923> db.restaurent.find({name:/^[Ww]il/},{name:1,restaurent_id:1,borough:1,cuisine:1,_id:0})
[
  {
    borough: 'Brooklyn',
    cuisine: 'Delicatessen',
    name: "Wilken'S Fine Food"
  },
  { borough: 'Bronx', cuisine: 'American', name: 'Wild Asia' },
  { borough: 'Bronx', cuisine: 'Pizza', name: 'Wilbel Pizza' },
  { borough: 'Manhattan', cuisine: 'Seafood', name: 'Wild Edibles' },
  {
    borough: 'Brooklyn',
    cuisine: 'Bagels/Pretzels',
    name: 'Wild Bagels'
  },
  {
    borough: 'Bronx',
    cuisine: 'Latin (Cuban, Dominican, Puerto Rican, South & Central American)',
    name: "Willie'S Steak House"
  },
  {
    borough: 'Manhattan',
    cuisine: 'American',
    name: 'Willis North America'
  },
  { borough: 'Brooklyn', cuisine: 'American', name: 'Willburg Cafe' },
  {
    borough: 'Manhattan',
    cuisine: 'Café/Coffee/Tea',
    name: 'William Greenberg Jr Desserts'
  },
  {
    borough: 'Brooklyn',
    cuisine: 'Vegetarian',
    name: 'Wild Ginger Vegan Cafe'
  },
  { borough: 'Manhattan', cuisine: 'Irish', name: 'Wilfie & Nell' },
  {
    borough: 'Manhattan',
    cuisine: 'Vegetarian',
    name: 'Wild Ginger Vegetarian Kitchen'
  },
  { borough: 'Manhattan', cuisine: 'Pizza', name: 'Wild' },
  {
    borough: 'Manhattan',
    cuisine: 'American',
    name: 'William Barnacle'
  },
  { borough: 'Queens', cuisine: 'American', name: 'William Hallet' },
  {
    borough: 'Brooklyn',
    cuisine: 'American',
    name: 'Williams & Bailey'
  },
  { borough: 'Manhattan', cuisine: 'Asian', name: 'Wild Ginger' },
  {
    borough: 'Manhattan',
    cuisine: 'Bakery',
    name: 'William Greenberg Dessert'
  },
  {
    borough: 'Brooklyn',
    cuisine: 'Pizza/Italian',
    name: 'Williamsburg Pizza'
  },
  {
    borough: 'Queens',
    cuisine: 'Ice Cream, Gelato, Yogurt, Ices',
    name: 'Wild Cherry'
  }
]
15. Write a MongoDB query to find the restaurant Id, name, borough and cuisine for those
restaurants which contain 'ces' as last three letters for its name.
iacsd0923> db.restaurent.find({name:/ces$/},{name:1,restaurent_id:1,borough:1,cuisine:1,_id:0})
[
  { borough: 'Manhattan', cuisine: 'American', name: 'Pieces' },
  {
    borough: 'Queens',
    cuisine: 'American',
    name: 'S.M.R Restaurant Services'
  },
  {
    borough: 'Manhattan',
    cuisine: 'American',
    name: 'Good Shepherd Services'
  },
  {
    borough: 'Queens',
    cuisine: 'Ice Cream, Gelato, Yogurt, Ices',
    name: "The Ice Box-Ralph'S Famous Italian Ices"
  },
  { borough: 'Brooklyn', cuisine: 'Jewish/Kosher', name: 'Alices' },
  { borough: 'Manhattan', cuisine: 'American', name: 'Re: Sources' },
  {
    borough: 'Staten Island',
    cuisine: 'Ice Cream, Gelato, Yogurt, Ices',
    name: "Cange'S Italian Ices"
  },
  {
    borough: 'Brooklyn',
    cuisine: 'American',
    name: 'B.A.M. Cafe/Great Performances'
  },
  {
    borough: 'Brooklyn',
    cuisine: 'American',
    name: 'Barbara Blum Residence / Good Shepherd Services'
  },
  {
    borough: 'Brooklyn',
    cuisine: 'Soul Food',
    name: 'Berts Restaurant & Catering Services'
  },
  {
    borough: 'Staten Island',
    cuisine: 'Ice Cream, Gelato, Yogurt, Ices',
    name: "Ralph'S Famous Italian Ices"
  },
  {
    borough: 'Queens',
    cuisine: 'Ice Cream, Gelato, Yogurt, Ices',
    name: "Ralph'S Famous Italian Ices"
  },
  {
    borough: 'Staten Island',
    cuisine: 'Ice Cream, Gelato, Yogurt, Ices',
    name: "Ralph'S Famous Italian Ices"
  },
  {
    borough: 'Manhattan',
    cuisine: 'American',
    name: 'International Flavors  & Fragrances'
  },
  {
    borough: 'Staten Island',
    cuisine: 'Ice Cream, Gelato, Yogurt, Ices',
    name: "Ralph'S Ices"
  },
  {
    borough: 'Manhattan',
    cuisine: 'American',
    name: 'New York Stock Exchange Executive Services'
  },
  { borough: 'Queens', cuisine: 'Pizza', name: 'Slices And Ices' },
  {
    borough: 'Staten Island',
    cuisine: 'Ice Cream, Gelato, Yogurt, Ices',
    name: "Ralph'S Famous Italian Ices"
  },
  {
    borough: 'Manhattan',
    cuisine: 'Ice Cream, Gelato, Yogurt, Ices',
    name: "Ralph'S Famous Italian Ices"
  },
  { borough: 'Bronx', cuisine: 'Caribbean', name: '7 Spices' }
]
16. Write a MongoDB query to find the restaurant Id, name, borough and cuisine for those
restaurants which contain 'Reg' as three letters somewhere in its name.
iacsd0923> db.restuarant.find({name:/^[Reg]/},{name:1,borough:1,cuisine:1})
iacsd0923> db.restaurent.find({name:/Reg/},{name:1,restaurent_id:1,borough:1,cuisine:1,_id:0})
[
  { borough: 'Brooklyn', cuisine: 'American', name: 'Regina Caterers' },
  {
    borough: 'Manhattan',
    cuisine: 'Café/Coffee/Tea',
    name: 'Caffe Reggio'
  },
  { borough: 'Manhattan', cuisine: 'American', name: 'Regency Hotel' },
  {
    borough: 'Manhattan',
    cuisine: 'American',
    name: 'Regency Whist Club'
  },
  { borough: 'Queens', cuisine: 'American', name: 'Rego Park Cafe' },
  { borough: 'Queens', cuisine: 'Pizza', name: 'Regina Pizza' },
  {
    borough: 'Manhattan',
    cuisine: 'American',
    name: 'Regal Entertainment Group'
  },
  {
    borough: 'Brooklyn',
    cuisine: 'Café/Coffee/Tea',
    name: 'Cafe Regular'
  },
  { borough: 'Queens', cuisine: 'Middle Eastern', name: 'Rego Pita' },
  { borough: 'Manhattan', cuisine: 'Italian', name: 'Regional' },
  {
    borough: 'Queens',
    cuisine: 'American',
    name: 'Regal Cinema 8 (Atlas Park Stadium)'
  },
  {
    borough: 'Manhattan',
    cuisine: 'American',
    name: 'Regal Cinemas E-Walk Stadium13'
  },
  { borough: 'Queens', cuisine: 'Jewish/Kosher', name: 'Regestan' },
  {
    borough: 'Brooklyn',
    cuisine: 'American',
    name: 'Sheepshead Bay Regal Cinemas Theatre'
  },
  {
    borough: 'Manhattan',
    cuisine: 'American',
    name: 'Regal Union Square Stadium 14'
  },
  {
    borough: 'Manhattan',
    cuisine: 'American',
    name: 'St Regis New York - 20Th Floor Roof Ballroom'
  },
  {
    borough: 'Queens',
    cuisine: 'Chinese',
    name: 'Rego Garden Restaurant, Inc'
  },
  {
    borough: 'Queens',
    cuisine: 'Pizza/Italian',
    name: "Regina'S Cafe & Pizzeria"
  },
  { borough: 'Queens', cuisine: 'American', name: 'Rego Bagel' },
  {
    borough: 'Queens',
    cuisine: 'Caribbean',
    name: 'Reggae Food Restaurant & Lounge'
  }
]
17. Write a MongoDB query to find the restaurants which belong to the borough Bronx and
prepared either American or Chinese dish.
iacsd0923> db.restaurent.find({borough:'Bronx',cuisine:{$in:['American','Chinese']}},{_id:0,name:1,restaurent_id:1,cuisine:1,borough:1})
[
  { borough: 'Bronx', cuisine: 'American', name: 'Wild Asia' },
  { borough: 'Bronx', cuisine: 'Chinese', name: 'Happy Garden' },
  { borough: 'Bronx', cuisine: 'Chinese', name: 'Happy Garden' },
  { borough: 'Bronx', cuisine: 'American', name: 'Manhem Club' },
  {
    borough: 'Bronx',
    cuisine: 'American',
    name: 'The New Starling Athletic Club Of The Bronx'
  },
  { borough: 'Bronx', cuisine: 'American', name: 'Yankee Tavern' },
  { borough: 'Bronx', cuisine: 'American', name: 'The Punch Bowl' },
  { borough: 'Bronx', cuisine: 'American', name: 'Munchtime' },
  { borough: 'Bronx', cuisine: 'American', name: 'Marina Delray' },
  { borough: 'Bronx', cuisine: 'American', name: 'Cool Zone' },
  { borough: 'Bronx', cuisine: 'American', name: 'Beaver Pond' },
  {
    borough: 'Bronx',
    cuisine: 'American',
    name: 'African Market (Baboon Cafe)'
  },
  {
    borough: 'Bronx',
    cuisine: 'American',
    name: 'Blue Bay Restaurant'
  },
  { borough: 'Bronx', cuisine: 'American', name: 'Bronx Grill' },
  { borough: 'Bronx', cuisine: 'American', name: "P & K'S Grill" },
  {
    borough: 'Bronx',
    cuisine: 'American',
    name: "John Mulligan'S Fireside Pub"
  },
  {
    borough: 'Bronx',
    cuisine: 'American',
    name: 'Quality Cafe & Restaurant'
  },
  { borough: 'Bronx', cuisine: 'American', name: 'Riverdale Diner' },
  { borough: 'Bronx', cuisine: 'American', name: 'Castlehill Diner' },
  {
    borough: 'Bronx',
    cuisine: 'American',
    name: 'Short Stop Restaurant'
  }
]
18. Write a MongoDB query to find the restaurant Id, name, borough and cuisine for those
restaurants which belong to the borough Staten Island or Queens or Bronxor Brooklyn.
iacsd0923> db.restaurent.find({borough:{$in:['Staten Island','Queens','Bronxor Brooklyn']}},{_id:0,name:1,restaurent_id:1,cuicuisine:1,borough:1})
[
  {
    borough: 'Queens',
    cuisine: 'American',
    name: 'Brunos On The Boulevard'
  },
  {
    borough: 'Staten Island',
    cuisine: 'Jewish/Kosher',
    name: 'Kosher Island'
  },
  {
    borough: 'Queens',
    cuisine: 'Jewish/Kosher',
    name: 'Tov Kosher Kitchen'
  },
  {
    borough: 'Queens',
    cuisine: 'Ice Cream, Gelato, Yogurt, Ices',
    name: 'Carvel Ice Cream'
  },
  { borough: 'Queens', cuisine: 'Delicatessen', name: "Sal'S Deli" },
  {
    borough: 'Queens',
    cuisine: 'Delicatessen',
    name: "Steve Chu'S Deli & Grocery"
  },
  { borough: 'Queens', cuisine: 'Chinese', name: 'Ho Mei Restaurant' },
  {
    borough: 'Staten Island',
    cuisine: 'Delicatessen',
    name: 'Bagels N Buns'
  },
  { borough: 'Queens', cuisine: 'Delicatessen', name: "Tony'S Deli" },
  { borough: 'Queens', cuisine: 'Bagels/Pretzels', name: 'Hot Bagels' },
  { borough: 'Queens', cuisine: 'American', name: 'Snack Time Grill' },
  {
    borough: 'Staten Island',
    cuisine: 'Ice Cream, Gelato, Yogurt, Ices',
    name: 'Carvel Ice Cream'
  },
  {
    borough: 'Queens',
    cuisine: 'American',
    name: 'Terminal Cafe/Yankee Clipper'
  },
  {
    borough: 'Staten Island',
    cuisine: 'Delicatessen',
    name: 'Plaza Bagels & Deli'
  },
  {
    borough: 'Staten Island',
    cuisine: 'Delicatessen',
    name: 'B & M Hot Bagel & Grocery'
  },
  { borough: 'Queens', cuisine: 'German', name: 'Gottscheer Hall' },
  {
    borough: 'Queens',
    cuisine: 'Jewish/Kosher',
    name: 'Ben-Best Deli & Restaurant'
  },
  {
    borough: 'Staten Island',
    cuisine: 'American',
    name: 'Great Kills Yacht Club'
  },
  {
    borough: 'Queens',
    cuisine: 'Pizza/Italian',
    name: 'New Park Pizzeria & Restaurant'
  },
  { borough: 'Queens', cuisine: 'American', name: 'Douglaston Club' }
]
19. Write a MongoDB query to find the restaurant Id, name, borough and cuisine for those
restaurants which are not belonging to the borough Staten Island or Queens or Bronxor
Brook
iacsd0923>  db.restaurent.find({borough:{$nin:['Staten Island','Queens','Bronxor Brooklyn']}},{_id:0,name:1,restaurent_id:1,ccuisine:1,borough:1})
[
  { borough: 'Brooklyn', cuisine: 'Hamburgers', name: "Wendy'S" },
  { borough: 'Brooklyn', cuisine: 'American', name: 'Riviera Caterer' },
  {
    borough: 'Manhattan',
    cuisine: 'Irish',
    name: 'Dj Reynolds Pub And Restaurant'
  },
  {
    borough: 'Bronx',
    cuisine: 'Bakery',
    name: 'Morris Park Bake Shop'
  },
  {
    borough: 'Brooklyn',
    cuisine: 'Delicatessen',
    name: "Wilken'S Fine Food"
  },
  { borough: 'Brooklyn', cuisine: 'American', name: 'Regina Caterers' },
  {
    borough: 'Brooklyn',
    cuisine: 'Ice Cream, Gelato, Yogurt, Ices',
    name: 'Taste The Tropics Ice Cream'
  },
  { borough: 'Bronx', cuisine: 'American', name: 'Wild Asia' },
  { borough: 'Brooklyn', cuisine: 'Chinese', name: 'May May Kitchen' },
  {
    borough: 'Manhattan',
    cuisine: 'American',
    name: '1 East 66Th Street Kitchen'
  },
  {
    borough: 'Brooklyn',
    cuisine: 'Ice Cream, Gelato, Yogurt, Ices',
    name: 'Carvel Ice Cream'
  },
  {
    borough: 'Brooklyn',
    cuisine: 'Jewish/Kosher',
    name: 'Seuda Foods'
  },
  {
    borough: 'Brooklyn',
    cuisine: 'Delicatessen',
    name: 'Nordic Delicacies'
  },
  {
    borough: 'Brooklyn',
    cuisine: 'American',
    name: 'C & C Catering Service'
  },
  { borough: 'Manhattan', cuisine: 'American', name: 'Glorious Food' },
  {
    borough: 'Manhattan',
    cuisine: 'Delicatessen',
    name: "Bully'S Deli"
  },
  {
    borough: 'Brooklyn',
    cuisine: 'American',
    name: 'The Movable Feast'
  },
  {
    borough: 'Manhattan',
    cuisine: 'American',
    name: 'P & S Deli Grocery'
  },
  {
    borough: 'Manhattan',
    cuisine: 'Chicken',
    name: "Harriet'S Kitchen"
  },
  {
    borough: 'Manhattan',
    cuisine: 'American',
    name: 'Angelika Film Center'
  }
]
20. Write a MongoDB query to find the restaurant Id, name, borough and cuisine for those
restaurants which achieved a score which is not more than 10.
iacsd0923> db.restaurent.find({'grades.score':{$lt:10}},{restaurant_id:1,name:1,borough:1,cuisine:1})
[
  {
    _id: ObjectId("65217afc70bdfe5fabdd9b9c"),
    borough: 'Brooklyn',
    cuisine: 'Hamburgers',
    name: "Wendy'S",
    restaurant_id: '30112340'
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdd9b9d"),
    borough: 'Brooklyn',
    cuisine: 'American',
    name: 'Riviera Caterer',
    restaurant_id: '40356018'
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdd9b9e"),
    borough: 'Manhattan',
    cuisine: 'Irish',
    name: 'Dj Reynolds Pub And Restaurant',
    restaurant_id: '30191841'
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdd9b9f"),
    borough: 'Bronx',
    cuisine: 'Bakery',
    name: 'Morris Park Bake Shop',
    restaurant_id: '30075445'
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdd9ba0"),
    borough: 'Queens',
    cuisine: 'American',
    name: 'Brunos On The Boulevard',
    restaurant_id: '40356151'
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdd9ba1"),
    borough: 'Staten Island',
    cuisine: 'Jewish/Kosher',
    name: 'Kosher Island',
    restaurant_id: '40356442'
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdd9ba3"),
    borough: 'Brooklyn',
    cuisine: 'Delicatessen',
    name: "Wilken'S Fine Food",
    restaurant_id: '40356483'
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdd9ba4"),
    borough: 'Brooklyn',
    cuisine: 'American',
    name: 'Regina Caterers',
    restaurant_id: '40356649'
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdd9ba5"),
    borough: 'Brooklyn',
    cuisine: 'Ice Cream, Gelato, Yogurt, Ices',
    name: 'Taste The Tropics Ice Cream',
    restaurant_id: '40356731'
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdd9ba6"),
    borough: 'Bronx',
    cuisine: 'American',
    name: 'Wild Asia',
    restaurant_id: '40357217'
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdd9ba7"),
    borough: 'Brooklyn',
    cuisine: 'Chinese',
    name: 'May May Kitchen',
    restaurant_id: '40358429'
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdd9ba8"),
    borough: 'Manhattan',
    cuisine: 'American',
    name: '1 East 66Th Street Kitchen',
    restaurant_id: '40359480'
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdd9ba9"),
    borough: 'Brooklyn',
    cuisine: 'Ice Cream, Gelato, Yogurt, Ices',
    name: 'Carvel Ice Cream',
    restaurant_id: '40360076'
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdd9baa"),
    borough: 'Brooklyn',
    cuisine: 'Jewish/Kosher',
    name: 'Seuda Foods',
    restaurant_id: '40360045'
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdd9bab"),
    borough: 'Queens',
    cuisine: 'Ice Cream, Gelato, Yogurt, Ices',
    name: 'Carvel Ice Cream',
    restaurant_id: '40361322'
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdd9bac"),
    borough: 'Brooklyn',
    cuisine: 'Delicatessen',
    name: 'Nordic Delicacies',
    restaurant_id: '40361390'
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdd9bad"),
    borough: 'Brooklyn',
    cuisine: 'American',
    name: 'C & C Catering Service',
    restaurant_id: '40357437'
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdd9bae"),
    borough: 'Manhattan',
    cuisine: 'American',
    name: 'Glorious Food',
    restaurant_id: '40361521'
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdd9baf"),
    borough: 'Queens',
    cuisine: 'Delicatessen',
    name: "Sal'S Deli",
    restaurant_id: '40361618'
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdd9bb0"),
    borough: 'Manhattan',
    cuisine: 'Delicatessen',
    name: "Bully'S Deli",
    restaurant_id: '40361708'
  }
]
21. Write a MongoDB query to find the restaurant Id, name, borough and cuisine for those
restaurants which prepared dish except 'American' and 'Chinees' or restaurant's name begins
with letter 'Wil'.
iacsd0923> db.restaurent.find({$or:[{cuisine:{$nin:['American','Chinese']}},{name:/^[Ww]il/}]},{_id:0,name:1,restaurent_idrestaurent_id:1,cuisine:1,borough:1})
[
  { borough: 'Brooklyn', cuisine: 'Hamburgers', name: "Wendy'S" },
  {
    borough: 'Manhattan',
    cuisine: 'Irish',
    name: 'Dj Reynolds Pub And Restaurant'
  },
  {
    borough: 'Bronx',
    cuisine: 'Bakery',
    name: 'Morris Park Bake Shop'
  },
  {
    borough: 'Staten Island',
    cuisine: 'Jewish/Kosher',
    name: 'Kosher Island'
  },
  {
    borough: 'Queens',
    cuisine: 'Jewish/Kosher',
    name: 'Tov Kosher Kitchen'
  },
  {
    borough: 'Brooklyn',
    cuisine: 'Delicatessen',
    name: "Wilken'S Fine Food"
  },
  {
    borough: 'Brooklyn',
    cuisine: 'Ice Cream, Gelato, Yogurt, Ices',
    name: 'Taste The Tropics Ice Cream'
  },
  { borough: 'Bronx', cuisine: 'American', name: 'Wild Asia' },
  {
    borough: 'Brooklyn',
    cuisine: 'Ice Cream, Gelato, Yogurt, Ices',
    name: 'Carvel Ice Cream'
  },
  {
    borough: 'Brooklyn',
    cuisine: 'Jewish/Kosher',
    name: 'Seuda Foods'
  },
  {
    borough: 'Queens',
    cuisine: 'Ice Cream, Gelato, Yogurt, Ices',
    name: 'Carvel Ice Cream'
  },
  {
    borough: 'Brooklyn',
    cuisine: 'Delicatessen',
    name: 'Nordic Delicacies'
  },
  { borough: 'Queens', cuisine: 'Delicatessen', name: "Sal'S Deli" },
  {
    borough: 'Manhattan',
    cuisine: 'Delicatessen',
    name: "Bully'S Deli"
  },
  {
    borough: 'Queens',
    cuisine: 'Delicatessen',
    name: "Steve Chu'S Deli & Grocery"
  },
  {
    borough: 'Manhattan',
    cuisine: 'Chicken',
    name: "Harriet'S Kitchen"
  },
  { borough: 'Brooklyn', cuisine: 'Hamburgers', name: 'White Castle' },
  {
    borough: 'Brooklyn',
    cuisine: 'Caribbean',
    name: "Shashemene Int'L Restaura"
  },
  {
    borough: 'Manhattan',
    cuisine: 'Turkish',
    name: 'The Country Cafe'
  },
  {
    borough: 'Bronx',
    cuisine: 'Ice Cream, Gelato, Yogurt, Ices',
    name: 'Carvel Ice Cream'
  }
]
22. Write a MongoDB query to find the restaurant Id, name, and grades for those restaurants
which achieved a grade of "A" and scored 11 on an ISODate "2014-08-11T00:00:00Z"
among many of survey dates
iacsd0923> db.restaurent.find({grades:{$elemMatch:{grade:'A',score:11}}},
...  {name:1,restaurent_id:1,cuisine:1,date:ISODate('2014-08-11T00:00:00Z'),borough:1,_id:0})
[
  {
    borough: 'Manhattan',
    cuisine: 'Irish',
    name: 'Dj Reynolds Pub And Restaurant',
    date: ISODate("2014-08-11T00:00:00.000Z")
  },
  {
    borough: 'Brooklyn',
    cuisine: 'American',
    name: 'Regina Caterers',
    date: ISODate("2014-08-11T00:00:00.000Z")
  },
  {
    borough: 'Bronx',
    cuisine: 'American',
    name: 'Wild Asia',
    date: ISODate("2014-08-11T00:00:00.000Z")
  },
  {
    borough: 'Brooklyn',
    cuisine: 'Jewish/Kosher',
    name: 'Seuda Foods',
    date: ISODate("2014-08-11T00:00:00.000Z")
  },
  {
    borough: 'Manhattan',
    cuisine: 'American',
    name: 'Glorious Food',
    date: ISODate("2014-08-11T00:00:00.000Z")
  },
  {
    borough: 'Manhattan',
    cuisine: 'Delicatessen',
    name: "Bully'S Deli",
    date: ISODate("2014-08-11T00:00:00.000Z")
  },
  {
    borough: 'Brooklyn',
    cuisine: 'American',
    name: 'The Movable Feast',
    date: ISODate("2014-08-11T00:00:00.000Z")
  },
  {
    borough: 'Manhattan',
    cuisine: 'Chicken',
    name: "Harriet'S Kitchen",
    date: ISODate("2014-08-11T00:00:00.000Z")
  },
  {
    borough: 'Brooklyn',
    cuisine: 'Caribbean',
    name: "Shashemene Int'L Restaura",
    date: ISODate("2014-08-11T00:00:00.000Z")
  },
  {
    borough: 'Manhattan',
    cuisine: 'Turkish',
    name: 'The Country Cafe',
    date: ISODate("2014-08-11T00:00:00.000Z")
  },
  {
    borough: 'Manhattan',
    cuisine: 'American',
    name: 'Downtown Deli',
    date: ISODate("2014-08-11T00:00:00.000Z")
  },
  {
    borough: 'Bronx',
    cuisine: 'Ice Cream, Gelato, Yogurt, Ices',
    name: 'Carvel Ice Cream',
    date: ISODate("2014-08-11T00:00:00.000Z")
  },
  {
    borough: 'Brooklyn',
    cuisine: 'Donuts',
    name: "Dunkin' Donuts",
    date: ISODate("2014-08-11T00:00:00.000Z")
  },
  {
    borough: 'Brooklyn',
    cuisine: 'American',
    name: 'Mejlander & Mulgannon',
    date: ISODate("2014-08-11T00:00:00.000Z")
  },
  {
    borough: 'Queens',
    cuisine: 'Chinese',
    name: 'Ho Mei Restaurant',
    date: ISODate("2014-08-11T00:00:00.000Z")
  },
  {
    borough: 'Manhattan',
    cuisine: 'Bakery',
    name: "Olive'S",
    date: ISODate("2014-08-11T00:00:00.000Z")
  },
  {
    borough: 'Staten Island',
    cuisine: 'Delicatessen',
    name: 'Bagels N Buns',
    date: ISODate("2014-08-11T00:00:00.000Z")
  },
  {
    borough: 'Queens',
    cuisine: 'Delicatessen',
    name: "Tony'S Deli",
    date: ISODate("2014-08-11T00:00:00.000Z")
  },
  {
    borough: 'Queens',
    cuisine: 'American',
    name: 'Snack Time Grill',
    date: ISODate("2014-08-11T00:00:00.000Z")
  },
  {
    borough: 'Manhattan',
    cuisine: 'Pizza',
    name: "Domino'S Pizza",
    date: ISODate("2014-08-11T00:00:00.000Z")
  }
]
23. Write a MongoDB query to find the restaurant Id, name and grades for those restaurants
where the 2nd element of grades array contains a grade of "A" and score 9 on an ISODate
"2014-08-11T00:00:00Z".
iacsd0923>  db.restaurent.find(
...  {'grades.1.grade':'A','grades.1.score':9},
...  {name:1,restaurent_id:1,cuisine:1,date:ISODate('2014-08-11T00:00:00Z')}
...  )
[
  {
    _id: ObjectId("65217afc70bdfe5fabdd9baf"),
    cuisine: 'Delicatessen',
    name: "Sal'S Deli",
    date: ISODate("2014-08-11T00:00:00.000Z")
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdd9bb3"),
    cuisine: 'American',
    name: 'P & S Deli Grocery',
    date: ISODate("2014-08-11T00:00:00.000Z")
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdd9bb9"),
    cuisine: 'American',
    name: 'Downtown Deli',
    date: ISODate("2014-08-11T00:00:00.000Z")
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdd9bbb"),
    cuisine: 'Donuts',
    name: "Dunkin' Donuts",
    date: ISODate("2014-08-11T00:00:00.000Z")
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdd9bc1"),
    cuisine: 'American',
    name: 'Cafe Metro',
    date: ISODate("2014-08-11T00:00:00.000Z")
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdd9bdb"),
    cuisine: 'American',
    name: 'Old Town Bar & Restaurant',
    date: ISODate("2014-08-11T00:00:00.000Z")
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdd9be3"),
    cuisine: 'Jewish/Kosher',
    name: 'Ben-Best Deli & Restaurant',
    date: ISODate("2014-08-11T00:00:00.000Z")
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdd9be9"),
    cuisine: 'American',
    name: 'Towne Cafe',
    date: ISODate("2014-08-11T00:00:00.000Z")
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdd9beb"),
    cuisine: 'Pizza/Italian',
    name: 'New Park Pizzeria & Restaurant',
    date: ISODate("2014-08-11T00:00:00.000Z")
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdd9bf5"),
    cuisine: 'American',
    name: 'Shell Lanes',
    date: ISODate("2014-08-11T00:00:00.000Z")
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdd9bfb"),
    cuisine: 'French',
    name: 'La Grenouille',
    date: ISODate("2014-08-11T00:00:00.000Z")
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdd9c00"),
    cuisine: 'American',
    name: 'The Princeton Club',
    date: ISODate("2014-08-11T00:00:00.000Z")
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdd9c03"),
    cuisine: 'Mexican',
    name: "Panchito'S",
    date: ISODate("2014-08-11T00:00:00.000Z")
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdd9c1a"),
    cuisine: 'American',
    name: "Neary'S Pub",
    date: ISODate("2014-08-11T00:00:00.000Z")
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdd9c23"),
    cuisine: 'Pizza/Italian',
    name: "Denino'S Pizzeria Tavern",
    date: ISODate("2014-08-11T00:00:00.000Z")
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdd9c30"),
    cuisine: 'Jewish/Kosher',
    name: 'Naomi Kosher Pizza',
    date: ISODate("2014-08-11T00:00:00.000Z")
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdd9c39"),
    cuisine: 'American',
    name: 'The Riviera Cafe',
    date: ISODate("2014-08-11T00:00:00.000Z")
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdd9c43"),
    cuisine: 'Pancakes/Waffles',
    name: 'Ihop',
    date: ISODate("2014-08-11T00:00:00.000Z")
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdd9c49"),
    cuisine: 'Café/Coffee/Tea',
    name: "Lulu'S Coffee Shop",
    date: ISODate("2014-08-11T00:00:00.000Z")
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdd9c73"),
    cuisine: 'Café/Coffee/Tea',
    name: 'Terrace Cafe',
    date: ISODate("2014-08-11T00:00:00.000Z")
  }
]
24. Write a MongoDB query to find the restaurant Id, name, address and geographical
location for those restaurants where 2nd element of coord array contains a value which is
more than 42 and upto 52
iacsd0923> db.restaurent.find({'address.coord.1':{$gt:42,$lt:52}},{name:1,restaurant_id:1,'address.coord.1':1})
[
  {
    _id: ObjectId("65217afc70bdfe5fabdd9e3f"),
    address: { coord: [] },
    name: "T.G.I. Friday'S",
    restaurant_id: '40387990'
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdd9e6f"),
    address: { coord: [] },
    name: 'T.G.I. Fridays',
    restaurant_id: '40388936'
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdda0c3"),
    address: { coord: [] },
    name: "Di Luvio'S Deli",
    restaurant_id: '40402284'
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdda2f7"),
    address: { coord: [] },
    name: 'La Caridad 78',
    restaurant_id: '40568285'
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdda9c8"),
    address: { coord: [] },
    name: "Bijan'S",
    restaurant_id: '40876618'
  },
  {
    _id: ObjectId("65217afc70bdfe5fabdda9df"),
    address: { coord: [] },
    name: 'Hyatt, Ny Central/Room Service',
    restaurant_id: '40879243'
  }]
25. Write a MongoDB query to arrange the name of the restaurants in ascending order along
with all the columns.
iacsd0923> db.restaurent.find({},{_id:0}).sort({name:1})
[
  {
    address: {
      building: '154',
      coord: [ -73.9189064, 40.8654529 ],
      street: 'Post Ave',
      zipcode: '10034'
    },
    borough: 'Manhattan',
    cuisine: 'Other',
    grades: [],
    name: '',
    restaurant_id: '50017887'
  },
  {
    address: {
      building: '508',
      coord: [ -73.999813, 40.683876 ],
      street: 'Henry St',
      zipcode: '11231'
    },
    borough: 'Brooklyn',
    cuisine: 'Other',
    grades: [],
    name: '',
    restaurant_id: '50017910'
  },
  {
    address: {
      building: '15',
      coord: [ -73.9966882, 40.7139264 ],
      street: 'Division St',
      zipcode: '10002'
    },
    borough: 'Manhattan',
    cuisine: 'Other',
    grades: [],
    name: '',
    restaurant_id: '50017912'
  },
  {
    address: {
      building: '4704',
      coord: [ -74.013391, 40.64943 ],
      street: '3Rd Ave',
      zipcode: '11220'
    },
    borough: 'Brooklyn',
    cuisine: 'Other',
    grades: [],
    name: '',
    restaurant_id: '50017925'
  },
  {
    address: {
      building: '2145',
      coord: [ -73.8668062, 40.8547454 ],
      street: 'Cruger Ave',
      zipcode: '10462'
    },
    borough: 'Bronx',
    cuisine: 'Other',
    grades: [],
    name: '',
    restaurant_id: '50017935'
  }
26. Write a MongoDB query to arrange the name of the restaurants in descending along with
all the columns.
iacsd0923> db.restaurent.find({},{_id:0}).sort({name:-1})
[
  {
    address: {
      building: '1',
      coord: [ -74.073156, 40.6457369 ],
      street: 'Richmond Terrace',
      zipcode: '10301'
    },
    borough: 'Staten Island',
    cuisine: 'Pizza',
    grades: [
      {
        date: ISODate("2015-01-13T00:00:00.000Z"),
        grade: 'Z',
        score: 18
      },
      {
        date: ISODate("2014-07-24T00:00:00.000Z"),
        grade: 'A',
        score: 12
      },
      {
        date: ISODate("2013-11-08T00:00:00.000Z"),
        grade: 'B',
        score: 21
      },
      {
        date: ISODate("2013-04-17T00:00:00.000Z"),
        grade: 'A',
        score: 12
      }
    ],
    name: "Zz'S Pizza & Grill",
    restaurant_id: '41702705'
  },
  {
    address: {
      building: '169',
      coord: [ -74.000466, 40.727688 ],
      street: 'Thompson Street',
      zipcode: '10012'
    },
    borough: 'Manhattan',
    cuisine: 'Other',
    grades: [
      {
        date: ISODate("2014-05-15T00:00:00.000Z"),
        grade: 'A',
        score: 10
      }
    ],
    name: 'Zz Clam Bar',
    restaurant_id: '50001062'
  },
  {
    address: {
      building: '726',
      coord: [ -73.8662887, 40.8594314 ],
      street: 'Astor Avenue',
      zipcode: '10467'
    },
    borough: 'Bronx',
    cuisine: 'American',
    grades: [
      {
        date: ISODate("2014-09-09T00:00:00.000Z"),
        grade: 'C',
        score: 75
      },
      {
        date: ISODate("2014-03-26T00:00:00.000Z"),
        grade: 'A',
        score: 5
      },
      {
        date: ISODate("2013-08-22T00:00:00.000Z"),
        grade: 'B',
        score: 18
      }
    ],
    name: 'Zymi Bar & Grill',
    restaurant_id: '41712791'
  },
  {
    address: {
      building: '173',
      coord: [ -73.98195249999999, 40.6784779 ],
      street: '4 Avenue',
      zipcode: '11217'
    },
    borough: 'Brooklyn',
    cuisine: 'Japanese',
    grades: [
      {
        date: ISODate("2014-07-01T00:00:00.000Z"),
        grade: 'A',
        score: 11
      },
      {
        date: ISODate("2013-12-20T00:00:00.000Z"),
        grade: 'A',
        score: 9
      },
      {
        date: ISODate("2013-03-21T00:00:00.000Z"),
        grade: 'A',
        score: 7
      }
27. Write a MongoDB query to arranged the name of the cuisine in ascending order and for
that same cuisine borough should be in descending order.
iacsd0923> db.restaurent.find({},{_id:0}).sort({cuisine:-1,borough:-1})
[
  {
    address: {
      building: '8278',
      coord: [ -73.88143509999999, 40.7412552 ],
      street: 'Broadway',
      zipcode: '11373'
    },
    borough: 'Queens',
    cuisine: 'Vietnamese/Cambodian/Malaysia',
    grades: [
      {
        date: ISODate("2014-06-12T00:00:00.000Z"),
        grade: 'B',
        score: 21
      },
      {
        date: ISODate("2013-05-20T00:00:00.000Z"),
        grade: 'A',
        score: 13
      },
      {
        date: ISODate("2012-12-26T00:00:00.000Z"),
        grade: 'A',
        score: 10
      },
      {
        date: ISODate("2012-12-03T00:00:00.000Z"),
        grade: 'P',
        score: 5
      },
      {
        date: ISODate("2012-05-04T00:00:00.000Z"),
        grade: 'B',
        score: 27
      }
    ],
    name: 'Pho Bac Vietnamese Seafood Cuisine',
    restaurant_id: '40578058'
  },
  {
    address: {
      building: '156-32',
      coord: [ -73.8087286, 40.7639199 ],
      street: 'Northern Boulevard',
      zipcode: '11354'
    },
    borough: 'Queens',
    cuisine: 'Vietnamese/Cambodian/Malaysia',
    grades: [
      {
        date: ISODate("2014-09-11T00:00:00.000Z"),
        grade: 'A',
        score: 13
      },
      {
        date: ISODate("2014-04-08T00:00:00.000Z"),
        grade: 'A',
        score: 11
      },
      {
        date: ISODate("2013-10-07T00:00:00.000Z"),
        grade: 'A',
        score: 12
      },
      {
        date: ISODate("2012-09-13T00:00:00.000Z"),
        grade: 'A',
        score: 2
      },
      {
        date: ISODate("2012-04-26T00:00:00.000Z"),
        grade: 'A',
        score: 7
      },
      {
        date: ISODate("2011-11-09T00:00:00.000Z"),
        grade: 'A',
        score: 10
      }
    ],
    name: 'Mekong Thai And Vietnamese Restaurant',
    restaurant_id: '41022628'
  },
  {
    address: {
      building: '4107',
      coord: [ -73.8293161, 40.7583823 ],
      street: 'Kissena Boulevard',
      zipcode: '11355'
    },
    borough: 'Queens',
    cuisine: 'Vietnamese/Cambodian/Malaysia',
    grades: [
      {
        date: ISODate("2014-11-13T00:00:00.000Z"),
        grade: 'A',
        score: 10
      },
      {
        date: ISODate("2014-05-20T00:00:00.000Z"),
        grade: 'A',
        score: 8
      },
      {
        date: ISODate("2013-10-16T00:00:00.000Z"),
        grade: 'B',
        score: 22
      },
      {
        date: ISODate("2013-03-20T00:00:00.000Z"),
        grade: 'B',
        score: 18
      },
      {
        date: ISODate("2012-08-01T00:00:00.000Z"),
        grade: 'B',
        score: 16
      },
      {
        date: ISODate("2011-12-14T00:00:00.000Z"),
        grade: 'B',
        score: 17
      }
    ],
    name: 'Pho Bang Restaurant',
    restaurant_id: '41145163'
  },
  {
    address: {
      building: '4010',
      coord: [ -73.8915947, 40.746408 ],
      street: '74 Street',
      zipcode: '11373'
    },
    borough: 'Queens',
    cuisine: 'Vietnamese/Cambodian/Malaysia',
    grades: [
      {
        date: ISODate("2014-08-12T00:00:00.000Z"),
        grade: 'A',
        score: 7
      },
      {
        date: ISODate("2014-01-09T00:00:00.000Z"),
        grade: 'B',
        score: 25
      },
      {
        date: ISODate("2013-06-25T00:00:00.000Z"),
        grade: 'A',
        score: 13
      },
      {
        date: ISODate("2012-05-07T00:00:00.000Z"),
        grade: 'A',
        score: 12
      },
      {
        date: ISODate("2011-12-28T00:00:00.000Z"),
        grade: 'A',
        score: 12
      }
    ],
    name: 'Thai Son',
    restaurant_id: '41221266'
  },
  {
    address: {
      building: '82-90',
      coord: [ -73.8848687, 40.743896 ],
      street: 'Broadway',
      zipcode: '11373'
    },
    borough: 'Queens',
    cuisine: 'Vietnamese/Cambodian/Malaysia',
    grades: [
      {
        date: ISODate("2014-07-02T00:00:00.000Z"),
        grade: 'B',
        score: 26
      },
      {
        date: ISODate("2013-10-23T00:00:00.000Z"),
        grade: 'B',
        score: 18
      },
      {
        date: ISODate("2013-05-30T00:00:00.000Z"),
        grade: 'B',
        score: 22
      },
      {
        date: ISODate("2012-12-18T00:00:00.000Z"),
        grade: 'A',
        score: 7
      },
      {
        date: ISODate("2012-09-04T00:00:00.000Z"),
        grade: 'C',
        score: 10
      },
      {
        date: ISODate("2012-02-24T00:00:00.000Z"),
        grade: 'B',
        score: 17
      }
    ],
    name: 'Pho Bang Restaurant',
    restaurant_id: '41338955'
  },
  {
    address: {
      building: '3802',
      coord: [ -73.83283279999999, 40.7600184 ],
      street: 'Prince Street',
      zipcode: '11354'
    },
    borough: 'Queens',
    cuisine: 'Vietnamese/Cambodian/Malaysia',
    grades: [
      {
        date: ISODate("2014-06-02T00:00:00.000Z"),
        grade: 'A',
        score: 9
      },
      {
        date: ISODate("2013-12-03T00:00:00.000Z"),
        grade: 'A',
        score: 11
      },
      {
        date: ISODate("2012-07-19T00:00:00.000Z"),
        grade: 'A',
        score: 7
      },
      {
        date: ISODate("2012-03-06T00:00:00.000Z"),
        grade: 'A',
        score: 9
      }
    ],
    name: 'Pho Vietnamese Restaurant',
    restaurant_id: '41379217'
  },
28. Write a MongoDB query to know whether all the addresses contains the street or not.
29. Write a MongoDB query which will select all documents in the restaurants collection
where the coord field value is Double.
30. Write a MongoDB query which will select the restaurant Id, name and grades for those
restaurants which returns 0 as a remainder after dividing the score by 7.
31. Write a MongoDB query to find the restaurant name, borough, longitude and attitude and
cuisine for those restaurants which contains 'mon' as three letters somewhere in its name.
32. Write a MongoDB query to find the restaurant name, borough, longitude and latitude and
cuisine for those restaurants which contain 'Mad' as first three letters of its name.